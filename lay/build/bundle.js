/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ (function(module, exports) {

eval("function flatten(array) {\n  return Array.prototype.concat.apply([], array);\n}\n\nconst TodoMVC = {\n  domain: {\n    Task: {\n      _proto: \"Entity\",\n      title: \"string\",\n      completed: \"bool\"\n    },\n    tasks: {\n      create: {\n        _proto: \"EventListener\",\n        title: { _proto: \"Argument\", type: \"string\" },\n        _stuff: {\n          _proto: [\n            \"self\",\n            \"append\"\n          ],\n          _stuff: {\n            _proto: \"Task\",\n            id: { _proto: \"UUID\" },\n            title: { _proto: \"title\" },\n            completed: false\n          }\n        }\n      },\n      all: {\n        // todo 本当はただのparent参照にしたいがうまくいかないので無駄にfilterかける\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"argument\", type: \"Task\" },\n          _stuff: true\n        }\n      },\n      active: {\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"Argument\", type: \"Task\" },\n          _stuff: {\n            _proto: \"not\",\n            _stuff: {\n              _proto: [\n                \"task\",\n                \"completed\",\n              ]\n            }\n          }\n        }\n      },\n      completed: {\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"Argument\", type: \"Task\" },\n          _stuff: {\n            _proto: [\n              \"task\",\n              \"completed\",\n            ]\n          }\n        }\n      },\n      _stuff: [\n      ]\n    }\n  },\n  presentation: {\n    location: {\n      hash: \"\",\n    },\n    // taskList: {\n    //   _proto: \"if\",\n    //   cond: {\n    //     _proto: [\n    //       \"location\",\n    //       \"hash\",\n    //       \"equals\"\n    //     ],\n    //     _stuff: \"#/active\"\n    //   },\n    //   then: {\n    //     _proto: [\n    //       \"domain\",\n    //       \"tasks\",\n    //       \"active\",\n    //       \"filter\"\n    //     ],\n    //     _stuff: {\n    //       _proto: \"Lambda\",\n    //       task: { _proto: \"argument\", type: \"Task\" },\n    //       _stuff: true\n    //     }\n    //   },\n    //   else: {\n    //     _proto: \"if\",\n    //     cond: {\n    //       _proto: [\n    //         \"location\",\n    //         \"hash\",\n    //         \"equals\"\n    //       ],\n    //       _stuff: \"#/completed\"\n    //     },\n    //     then: {\n    //       _proto: [\n    //         \"domain\",\n    //         \"tasks\",\n    //         \"completed\",\n    //         \"filter\"\n    //       ],\n    //       _stuff: {\n    //         _proto: \"Lambda\",\n    //         task: { _proto: \"argument\", type: \"Task\" },\n    //         _stuff: true\n    //       }\n    //     },\n    //     else: {\n    //       _proto: [\n    //         \"domain\",\n    //         \"tasks\",\n    //         \"all\",\n    //         \"filter\"\n    //       ],\n    //       _stuff: {\n    //         _proto: \"Lambda\",\n    //         task: { _proto: \"argument\", type: \"Task\" },\n    //         _stuff: true\n    //       }\n    //     }\n    //   }\n    // },\n    body: {\n      _proto: \"Body\",\n      _stuff: [\n        {\n          _proto: \"Section\",\n          class: \"todoapp\",\n          _stuff: [\n            {\n              _proto: \"Div\",\n              _stuff: [\n                {\n                  _proto: \"Header\",\n                  class: \"header\",\n                  _stuff: [\n                    {\n                      _proto: \"H1\",\n                      _stuff: [\n                        \"todos\"\n                      ]\n                    },\n                    {\n                      _proto: \"Input\",\n                      class: \"new-todo\",\n                      placeholder: \"What needs to be done?\",\n                      autofocus: true,\n                      clear: {\n                        _proto: \"EventListener\",\n                        _stuff: {\n                          _proto: [\n                            \"self\",\n                            \"set\"\n                          ],\n                          value: \"\",\n                        }\n                      },\n                      keyup: {\n                        _proto: \"EventListener\",\n                        keyCode: { _proto: \"Argument\", type: \"Literal\" },\n                        _stuff: {\n                          _proto: \"if\",\n                          cond: {\n                            _proto: [\n                              \"keyCode\",\n                              \"equals\"\n                            ],\n                            _stuff: 13\n                          },\n                          then: {\n                            _proto: \"Stuff\",\n                            _stuff: [\n                              {\n                                _proto: [\n                                  \"domain\",\n                                  \"tasks\",\n                                  \"create\"\n                                ],\n                                title: {\n                                  _proto: \"value\"\n                                }\n                              },\n                              {\n                                _proto: \"clear\"\n                              }\n                            ]\n                          },\n                          else: undefined\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  _proto: \"Section\",\n                  class: \"main\",\n                  _stuff: [\n                    {\n                      _proto: \"Input\",\n                      class: \"toggle-all\",\n                      type: \"checkbox\"\n                    },\n                    {\n                      _proto: \"Ul\",\n                      class: \"todo-list\",\n                      _stuff: { \n                        _proto: [\n                          \"domain\",\n                          \"tasks\",\n                          \"map\"\n                        ],\n                        _stuff: [\n                          {\n                            _proto: \"Lambda\",\n                            task: { _proto: \"Argument\", type: \"Task\" },\n                            _stuff: [\n                              {\n                                _proto: \"Li\",\n                                key: {\n                                  _proto: [\n                                    \"task\",\n                                    \"id\"\n                                  ]\n                                },\n                                _stuff: [\n                                  {\n                                    _proto: \"Div\",\n                                    class: \"view\",\n                                    _stuff: [\n                                      {\n                                        _proto: \"Input\",\n                                        class: \"toggle\",\n                                        type: \"checkbox\",\n                                      },\n                                      {\n                                        _proto: \"Label\",\n                                        _stuff: {\n                                          _proto: [\n                                            \"task\",\n                                            \"title\"\n                                          ],\n                                        }\n                                      },\n                                      {\n                                        _proto: \"Button\",\n                                        class: \"destroy\",\n                                      }\n                                    ]\n                                  },\n                                  {\n                                    _proto: \"Input\",\n                                    class: \"edit\",\n                                    value: {\n                                      _proto: [\n                                        \"task\",\n                                        \"title\"\n                                      ],\n                                    }\n                                  }\n                                ]\n                              }\n                            ]\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                },\n                {\n                  _proto: \"Footer\",\n                  class: \"footer\",\n                  _stuff: [\n                    {\n                      _proto: \"Span\",\n                      class: \"todo-count\",\n                      _stuff: [\n                        {\n                          _proto: \"Strong\",\n                          _stuff: {\n                            _proto: [\n                              \"domain\",\n                              \"tasks\",\n                              \"count\"\n                            ]\n                          }\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: \" \"\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: {\n                            _proto: \"if\",\n                            cond: {\n                              _proto: [\n                                \"domain\", \n                                \"tasks\", \n                                \"count\", \n                                \"equals\"\n                              ],\n                              _stuff: 1\n                            },\n                            then: \"item\",\n                            else: \"items\"\n                          }\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: \" left\"\n                        }\n                      ]\n                    },\n                    {\n                      _proto: \"Ul\",\n                      class: \"filters\",\n                      _stuff: [\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/\",\n                              class: \"selected\",\n                              _stuff: \"All\"\n                            }\n                          ]\n                        },\n                        {\n                          _proto: \"Span\",\n                        },\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/active\",\n                              _stuff: \"Active\"\n                            }\n                          ]\n                        },\n                        {\n                          _proto: \"Span\",\n                        },\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/completed\",\n                              _stuff: \"Completed\"\n                            }\n                          ]\n                        },\n                      ]\n                    },\n                    {\n                      _proto: \"Button\",\n                      class: \"clear-completed\",\n                      _stuff: \"Clear Completed\"\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          _proto: \"Footer\",\n          class: \"info\",\n          _stuff: [\n            {\n              _proto: \"P\",\n              _stuff: \"Double-click to edit a todo\"\n            },\n            {\n              _proto: \"P\",\n              _stuff: [\n                \"Created by \",\n                {\n                  _proto: \"A\",\n                  href: \"http://github.com/emeitch/\",\n                  _stuff: \"Hideyuki MORITA (emeitch)\"\n                }\n              ]\n            },\n            {\n              _proto: \"P\",\n              _stuff: [\n                \"Part of \",\n                {\n                  _proto: \"A\",\n                  href: \"http://todomvc.com\",\n                  _stuff: \"TodoMVC\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n};\n// console.log(TodoMVC);\n\nfunction equals(o1, o2) {\n  return JSON.stringify(o1) === JSON.stringify(o2);\n}\n  \nclass State {\n  constructor(init={}) {\n    Object.assign(this, init);\n  }\n}\n\nclass Error extends State {\n}\n\nclass TypeError extends Error {\n}\n\nclass RequiredPropertyError extends Error {\n}\n\nclass Value extends State {\n}\n\nclass Entity extends State {\n}\n\nclass Path extends State {\n  static generateUUID() {\n    // UUID ver 4 / RFC 4122\n    var uuid = \"\", i, random;\n    for (i = 0; i < 32; i++) {\n      random = Math.random() * 16 | 0;\n      \n      if (i == 8 || i == 12 || i == 16 || i == 20) {\n        uuid += \"-\"\n      }\n      uuid += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return uuid;\n  }\n\n  static uuid() {\n    return \"urn:uuid:\" + this.generateUUID();\n  }\n  \n  static isUUID(key) {\n    return key.match(/^urn:uuid:/);\n  }\n  \n  static isName(key) {\n    return !this.isUUID(key);\n  }\n  \n  static isConst(key) {\n    return !!key.match(/^[A-Z]/);\n  }\n\n  constructor(...keys) {\n    super();\n    this.keys = keys;\n  }\n  \n  get top() {\n    return this.keys[0];\n  }\n  \n  get last() {\n    return this.keys[this.keys.length-1];\n  }\n  \n  get rest() {\n    return this.keys.slice(1);\n  }\n  \n  parent() {\n    if (this.keys.length === 1) {\n      return undefined;\n    }\n    \n    const keys = this.keys.concat();\n    keys.pop();\n    return new this.constructor(...keys);\n  }\n  \n  child(key) {\n    const keys = this.keys.concat([key]);\n    return new this.constructor(...keys);\n  }\n}\n\nclass Store {\n  constructor() {\n    this.bindings = {}\n    \n    // premitives\n    this.appendState(Object.assign(new Boolean(false), {\n      _name: Boolean.name, \n      _abstract: true\n    }));\n    this.appendState(Object.assign(new Number(0), {\n      _name: Number.name,\n      _abstract: true\n    }));\n    this.appendState(Object.assign(new String(\"\"), {\n      _name: String.name,\n      _abstract: true\n    }));\n    this.appendState(Object.assign(new Array(), {\n      _name: Array.name,\n      _abstract: true\n    }));\n    this.appendState(new Value({\n      _name: Value.name,\n      _abstract: true\n    }));\n    this.appendState(new Entity({\n      _name: Entity.name,\n      _abstract: true\n    }));\n    \n    this.appendState(new Error({_name: Error.name}));\n    this.appendState(new TypeError({_name: TypeError.name}));\n    this.appendState(new RequiredPropertyError({_name: RequiredPropertyError.name}));\n  }\n  \n  getProtoResource(state) {\n    const protoPath = state._proto;\n    if (protoPath) {\n      return this.follow(protoPath);\n    }\n\n    return undefined;\n  }\n  \n  resolveName(key) {\n    if (!Path.isName(key)) {\n      return key;\n    }\n    \n    const uuid = this.bindings[key];\n    if (!uuid) {\n      return undefined;\n    }\n    \n    return uuid;\n  }\n    \n  resolvePathTopName(path) {\n    const top = this.resolveName(path.top);\n    if (!top) {\n      return undefined;\n    }\n    \n    return new Path(top, ...path.rest);\n  }\n  \n  getState(id) {\n    if (typeof(id) === \"string\") {\n      const key = this.resolveName(id);\n      return this[key];\n    }\n    \n    const path = this.resolvePathTopName(id);\n    let state = this.getState(path.top);\n    for (const key of path.rest) {\n      const val = state[key];\n      if (!val) {\n        return undefined;\n      } else if (val instanceof Path) {\n        state = this.getState(val);\n      } else {\n        state = val;\n      }\n    }\n    return state;\n  }\n  \n  entities(state) {\n    const entities = {};\n    \n    let proto = this.getProtoResource(state);\n    while (proto) {\n      const state = proto.get();\n      for (var key in state) {\n        // reject const key for namespase\n        if (state.hasOwnProperty(key) && !Path.isConst(key)) { \n          const val = proto.follow(key).get();\n          if (val instanceof Entity && !entities[key]) {\n            entities[key] = val;\n          }\n        }\n      }\n      \n      proto = proto.proto;\n    }\n    \n    return entities;\n  }\n    \n  setState(key, state) {\n    if (state === null) {\n      delete this[key];\n      return undefined;\n    }\n    \n    const res = this.follow(key);\n    \n    const proto = this.getProtoResource(state);\n    const error = proto ? proto.validate(state) : undefined;\n    if (error) {\n      this[key] = error;\n      return this.follow(key);\n    }\n    \n    const name = state._name;\n    if (name) {\n      this.bindings[name] = key;\n      \n      if (res && res.name && res.name !== name) {\n        delete this.bindings[res.name];\n      }\n    }\n    \n    const appendChild = (child) => {\n      const childId = child._uuid || Path.uuid();\n      \n      delete child._uuid;\n      child._parent = new Path(key);\n      \n      this.setState(childId, child);\n      return childId;\n    };\n    \n    for (const k in state) {\n      if (state.hasOwnProperty(k)) {\n        const v = state[k];\n        if (v instanceof Path) {\n          // resolve name and recurcive definition\n          state[k] = this.resolvePathTopName(v);\n        } else if (v instanceof Entity) {\n          // set entity as child resource\n          const entity = v;\n          const childId = appendChild(entity);\n          state[k] = new Path(childId);\n        } else if (v === null) {\n          // remove null property\n          delete state[k];\n        }\n      }\n    }\n     \n    const entities = this.entities(state);\n    for (const k in entities) {\n      if (entities.hasOwnProperty(k)) {\n        // remove old child parent\n        if (res) {\n          const old = res.follow(k);\n          if (old) {\n            old.patch({_parent: null});\n          }\n        }\n        \n        const entity = entities[k];\n        const override = state[k];\n        const child = override ? Object.assign({}, entity, override) : entity;\n        const childId = appendChild(child);\n        state[k] = new Path(childId);\n      }\n    }\n    \n    this[key] = state;\n    return this.follow(key);\n  }\n  \n  appendState(state) {\n    const key = Path.uuid();\n    return this.setState(key, state);\n  }\n    \n  // same interface for Resource\n  follow(id) {\n    const path = this.resolvePathTopName(\n      typeof(id) === \"string\" ? new Path(id) : id\n    );\n    \n    if (!path || !this.getState(path)) {\n      return undefined;\n    }\n    \n    return new Resource(this, path);\n  }\n    \n  post(state) {\n    return this.appendState(state);\n  }\n}\n\nclass Resource {\n  constructor(store, path) {\n    this.store = store;\n    this.path = path;\n  }\n  \n  get permanent() {\n    // normalization\n    return this.normalize();\n  }\n  \n  get state() {\n    return this.get();\n  }\n    \n  get proto() {\n    return this.store.getProtoResource(this.state);\n  }\n  \n  get parent() {\n    const parentPath = this.state._parent;\n    if (parentPath) {\n      return this.store.follow(parentPath);\n    }\n    return undefined;\n  }\n  \n  get isAbstract() {\n    return this.state._abstract;\n  }\n  \n  get name() {\n    return this.state._name;\n  }\n  \n  normalize() {\n    let res = this.store;\n    for (const key of this.path.keys) {\n      res = res.follow(key);\n    }\n    return res;\n  }\n  \n  equals(other) {\n    if (other instanceof Resource) {\n      return equals(this.permanent.path, other.permanent.path);\n    } else {\n      // state equivalency\n      return equals(this.state, other);\n    }\n  }\n  \n  validate(state) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key)) {\n        const val = state[key];\n        const prop = this.follow(key);\n        const propState = (prop && prop.get()) || prop;\n        if (propState \n          && !equals(propState, val.__proto__) \n          && !equals(propState.__proto__, val.__proto__)) {\n          return new Value({\n            _proto: new Path(TypeError.name),\n          });\n        }\n      }\n    }\n    \n    const current = this.get();\n    for (var key in current) {\n      if (current.hasOwnProperty(key)) {\n        if (this.follow(key).isAbstract && state[key] === undefined) {\n          return new Value({\n            _proto: new Path(RequiredPropertyError.name),\n          });\n        }\n      }\n    }\n    \n    return null;\n  }\n    \n  follow(key) {\n    const state = this.get();\n    const val = state[key];\n    if (val instanceof Path) { // reference entity\n      return this.store.follow(val);\n    } else if (val === undefined && this.proto !== undefined) { // prototype chain\n      return this.proto.follow(key);\n    } else {\n      return this.store.follow(this.path.child(key));\n    }\n  }\n  \n  get() {\n    return this.store.getState(this.path);\n  }\n  \n  put(state) {\n    const parentPath = this.path.parent();\n    if (parentPath) {\n      this.store.follow(parentPath).patch({[this.path.last]: state});\n    } else {\n      this.store.setState(this.path.top, state);\n    }    \n  }\n\n  patch(diff) {\n    const current = this.get();\n    const state = Object.assign({}, current, diff);\n    this.put(state);\n  }\n  \n  // todo: postを追加する(resourceがprotoになる?)\n}\n\n\n// test suite\nconst store = new Store();\n\nconst p1 = store.post({\n  _name: \"Proto1\",\n  foo: 1,\n  bar: 2,\n  fiz: 9\n});\nconst r2id = Path.uuid();\nconst r1 = store.post({\n  _proto: p1.path,\n  foo: 3, \n  bar: 4,\n  baz: new Path(r2id)\n});\nconst r2 = store.setState(r2id, {\n  _proto: p1.path,\n  foo: 5,\n  bar: 6,\n  baz: r1.path\n});\nconst r3 = store.post({\n  _proto: p1.path,\n  foo: 5,\n  bar: 6,\n  baz: r1.path\n});\n\n// resource generation\nconsole.assert(r1.path instanceof Path);\nconsole.assert(r2.path instanceof Path);\n\n// resource property access\nconsole.assert(r1.follow(\"foo\").equals(3));\nconsole.assert(r1.follow(\"bar\").equals(4));\nconsole.assert(r2.follow(\"foo\").equals(5));\nconsole.assert(r2.follow(\"bar\").equals(6));\n\n// circular referencing\nconsole.assert(r2.follow(\"baz\").equals(r1));\nconsole.assert(r2.follow(\"baz\").follow(\"baz\").equals(r2));\nconsole.assert(r2.follow(\"baz\").follow(\"baz\").follow(\"baz\").equals(r1));\n\n// prototype definition\nconsole.assert(r2.follow(\"_proto\").equals(p1));\nconsole.assert(r2.proto.equals(p1));\nconsole.assert(r2.proto.name === \"Proto1\");\n\n// get method returns raw path\nconsole.assert(equals(store.getState(\"Proto1\"), p1.get()));\n// resource method resolves id reference\nconsole.assert(store.follow(\"Proto1\").equals(p1));\n\n// prototype chain\nconsole.assert(r2.follow(\"fiz\").equals(9));\n\n// equivalency\nconsole.assert(r2.equals(r2));\nconsole.assert(!r2.equals(r3));\nconsole.assert(r2.equals(r2.get())); // state equivalency\nconsole.assert(equals(r2.get(), r3.get()));\nconsole.assert(!equals(r2.get(),r1.get()));\n\n\n// entity schema for composition\nconst k2 = \"Proto2\";\nconst p2 = store.post({\n  _name: k2,\n  foo: new Entity({\n    bar: 3,\n    baz: 4,\n  }),\n});\nconst r4 = store.post({\n  _proto: new Path(k2),\n  foo: {\n    baz: 5,\n  },\n  fiz: 9,\n});\n\n// prototype chain by entity\nconsole.assert(r4.follow(\"foo\").follow(\"bar\").equals(3));\n// parent entity access\nconsole.assert(r4.follow(\"foo\").parent.equals(r4));\n// override child entity property\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(5));\n// get by path\nconsole.assert(store.follow(new Path(r4.path.top)).follow(\"foo\").follow(\"baz\").equals(5));\nconsole.assert(store.follow(new Path(r4.path.top, \"foo\")).follow(\"baz\").equals(5));\nconsole.assert(store.follow(new Path(r4.path.top, \"foo\", \"baz\")).equals(5));\n\n// update property\nconsole.assert(r4.follow(\"fiz\").equals(9));\nr4.patch({fiz: 8});\nconsole.assert(r4.follow(\"fiz\").equals(8));\n\n// update child property\nr4.follow(\"foo\").patch({baz: 6});\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(6));\n\n// update by state\nr4.patch({\n  fiz: 9,\n});\nconsole.assert(r4.follow(\"fiz\").equals(9));\n\n// update child by state\nr4.follow(\"foo\").patch({\n  baz: 7,\n});\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(7));\n\n// update parent and child by state\nconst oldFoo = r4.follow(\"foo\");\nr4.patch({\n  fiz: 7,\n  foo: {\n    baz: 8,\n  }\n});\nconsole.assert(r4.follow(\"fiz\").equals(7));\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(8));\nconsole.assert(!equals(r4.follow(\"foo\").path, oldFoo.path)); // updated\nconsole.assert(oldFoo.get()._parent === undefined);\nconsole.assert(oldFoo.parent === undefined);\n\n// update parent and child by state with child identifier\nconst fooPath = r4.follow(\"foo\").path;\nr4.patch({\n  fiz: 6, \n  foo: {\n    _uuid: fooPath.top,\n    baz: 9,\n  }\n});\nconsole.assert(r4.follow(\"fiz\").equals(6));\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(9));\nconsole.assert(equals(r4.follow(\"foo\").path, fooPath)); // not updated\n\n// update proto's key name\nconsole.assert(store.follow(\"Proto2\"));\nconsole.assert(!store.follow(\"Proto2dash\"));\nconst k2dash = new Path(\"Proto2dash\");\np2.patch({_name: k2dash.top});\nconsole.assert(!store.follow(\"Proto2\"));\nconsole.assert(r4.proto.name === \"Proto2dash\");\nconsole.assert(store.follow(\"Proto2dash\").equals(p2));\n\n\n// nested state resource\nconst r5 = store.post({\n  hoge: 3,\n  fuga: 4,\n});\nconst r6 = store.post({\n  foo: {\n    _proto: r5.path,\n    hoge: 5,\n  }\n});\nconsole.assert(r6.follow(\"foo\").follow(\"hoge\").equals(5));\nconsole.assert(r6.follow(\"foo\").proto.follow(\"hoge\").equals(3));\n\n\n// update deep nested state\nconst r7 = store.post({\n  foo: {\n    bar: {\n      baz: {\n        fiz: 5,\n      }\n    }\n  }\n});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(5));\nr7.follow(\"foo\").follow(\"bar\").follow(\"baz\").patch({fiz: 7});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(7));\nr7.follow(\"foo\").follow(\"bar\").follow(\"baz\").patch({fiz: 8});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(8));\n\n\n// recurcive definition\nconst list = store.post({\n  _name: \"List\",\n  car: new Path(\"Entity\"),\n  cdr: new Path(\"List\"),\n});\nconsole.assert(store.follow(\"List\").follow(\"cdr\").equals(store.follow(\"List\")));\n\n\n// algebraic data type\n// e.g. http://qiita.com/xmeta/items/91dfb24fa87c3a9f5993\nconst color = store.post({\n  _proto: new Path(Value.name),\n  _name: \"Color\",\n  Red: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  Blue: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  Green: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  RGB: new Entity({\n    _proto: new Path(\"Color\"),\n    r: new Path(\"Number\"),\n    g: new Path(\"Number\"),\n    b: new Path(\"Number\"),\n  }),\n});\n\n// namespace & proto\nconsole.assert(store.follow(\"Color\").equals(color));\nconsole.assert(store.follow(\"Color\").follow(\"Red\").proto.equals(color));\nconsole.assert(store.follow(\"Color\").follow(\"RGB\").proto.equals(color));\n\n// concrete resource\nconst c1 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  b: 7\n});\nconsole.assert(c1.proto.equals(color.follow(\"RGB\")));\n\n// premitive type error\nconst err1 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  b: \"invalid\",\n});\nconsole.assert(err1.proto.equals(store.follow(\"TypeError\")));\n\n// required property error\nconst err2 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  // b: \"nothing\",\n});\nconsole.assert(err2.proto.equals(store.follow(\"RequiredPropertyError\")));\n\n\nconsole.log(\"all tests succeeded.\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuanM/N2FjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBmbGF0dGVuKGFycmF5KSB7XG4gIHJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLCBhcnJheSk7XG59XG5cbmNvbnN0IFRvZG9NVkMgPSB7XG4gIGRvbWFpbjoge1xuICAgIFRhc2s6IHtcbiAgICAgIF9wcm90bzogXCJFbnRpdHlcIixcbiAgICAgIHRpdGxlOiBcInN0cmluZ1wiLFxuICAgICAgY29tcGxldGVkOiBcImJvb2xcIlxuICAgIH0sXG4gICAgdGFza3M6IHtcbiAgICAgIGNyZWF0ZToge1xuICAgICAgICBfcHJvdG86IFwiRXZlbnRMaXN0ZW5lclwiLFxuICAgICAgICB0aXRsZTogeyBfcHJvdG86IFwiQXJndW1lbnRcIiwgdHlwZTogXCJzdHJpbmdcIiB9LFxuICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgIFwic2VsZlwiLFxuICAgICAgICAgICAgXCJhcHBlbmRcIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgX3N0dWZmOiB7XG4gICAgICAgICAgICBfcHJvdG86IFwiVGFza1wiLFxuICAgICAgICAgICAgaWQ6IHsgX3Byb3RvOiBcIlVVSURcIiB9LFxuICAgICAgICAgICAgdGl0bGU6IHsgX3Byb3RvOiBcInRpdGxlXCIgfSxcbiAgICAgICAgICAgIGNvbXBsZXRlZDogZmFsc2VcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhbGw6IHtcbiAgICAgICAgLy8gdG9kbyDmnKzlvZPjga/jgZ/jgaDjga5wYXJlbnTlj4LnhafjgavjgZfjgZ/jgYTjgYzjgYbjgb7jgY/jgYTjgYvjgarjgYTjga7jgafnhKHpp4TjgatmaWx0ZXLjgYvjgZHjgotcbiAgICAgICAgX3Byb3RvOiBbXG4gICAgICAgICAgXCJwYXJlbnRcIixcbiAgICAgICAgICBcImZpbHRlclwiXG4gICAgICAgIF0sXG4gICAgICAgIF9zdHVmZjoge1xuICAgICAgICAgIF9wcm90bzogXCJMYW1iZGFcIixcbiAgICAgICAgICB0YXNrOiB7IF9wcm90bzogXCJhcmd1bWVudFwiLCB0eXBlOiBcIlRhc2tcIiB9LFxuICAgICAgICAgIF9zdHVmZjogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYWN0aXZlOiB7XG4gICAgICAgIF9wcm90bzogW1xuICAgICAgICAgIFwicGFyZW50XCIsXG4gICAgICAgICAgXCJmaWx0ZXJcIlxuICAgICAgICBdLFxuICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICBfcHJvdG86IFwiTGFtYmRhXCIsXG4gICAgICAgICAgdGFzazogeyBfcHJvdG86IFwiQXJndW1lbnRcIiwgdHlwZTogXCJUYXNrXCIgfSxcbiAgICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICAgIF9wcm90bzogXCJub3RcIixcbiAgICAgICAgICAgIF9zdHVmZjoge1xuICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICBcInRhc2tcIixcbiAgICAgICAgICAgICAgICBcImNvbXBsZXRlZFwiLFxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29tcGxldGVkOiB7XG4gICAgICAgIF9wcm90bzogW1xuICAgICAgICAgIFwicGFyZW50XCIsXG4gICAgICAgICAgXCJmaWx0ZXJcIlxuICAgICAgICBdLFxuICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICBfcHJvdG86IFwiTGFtYmRhXCIsXG4gICAgICAgICAgdGFzazogeyBfcHJvdG86IFwiQXJndW1lbnRcIiwgdHlwZTogXCJUYXNrXCIgfSxcbiAgICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICAgIF9wcm90bzogW1xuICAgICAgICAgICAgICBcInRhc2tcIixcbiAgICAgICAgICAgICAgXCJjb21wbGV0ZWRcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBfc3R1ZmY6IFtcbiAgICAgIF1cbiAgICB9XG4gIH0sXG4gIHByZXNlbnRhdGlvbjoge1xuICAgIGxvY2F0aW9uOiB7XG4gICAgICBoYXNoOiBcIlwiLFxuICAgIH0sXG4gICAgLy8gdGFza0xpc3Q6IHtcbiAgICAvLyAgIF9wcm90bzogXCJpZlwiLFxuICAgIC8vICAgY29uZDoge1xuICAgIC8vICAgICBfcHJvdG86IFtcbiAgICAvLyAgICAgICBcImxvY2F0aW9uXCIsXG4gICAgLy8gICAgICAgXCJoYXNoXCIsXG4gICAgLy8gICAgICAgXCJlcXVhbHNcIlxuICAgIC8vICAgICBdLFxuICAgIC8vICAgICBfc3R1ZmY6IFwiIy9hY3RpdmVcIlxuICAgIC8vICAgfSxcbiAgICAvLyAgIHRoZW46IHtcbiAgICAvLyAgICAgX3Byb3RvOiBbXG4gICAgLy8gICAgICAgXCJkb21haW5cIixcbiAgICAvLyAgICAgICBcInRhc2tzXCIsXG4gICAgLy8gICAgICAgXCJhY3RpdmVcIixcbiAgICAvLyAgICAgICBcImZpbHRlclwiXG4gICAgLy8gICAgIF0sXG4gICAgLy8gICAgIF9zdHVmZjoge1xuICAgIC8vICAgICAgIF9wcm90bzogXCJMYW1iZGFcIixcbiAgICAvLyAgICAgICB0YXNrOiB7IF9wcm90bzogXCJhcmd1bWVudFwiLCB0eXBlOiBcIlRhc2tcIiB9LFxuICAgIC8vICAgICAgIF9zdHVmZjogdHJ1ZVxuICAgIC8vICAgICB9XG4gICAgLy8gICB9LFxuICAgIC8vICAgZWxzZToge1xuICAgIC8vICAgICBfcHJvdG86IFwiaWZcIixcbiAgICAvLyAgICAgY29uZDoge1xuICAgIC8vICAgICAgIF9wcm90bzogW1xuICAgIC8vICAgICAgICAgXCJsb2NhdGlvblwiLFxuICAgIC8vICAgICAgICAgXCJoYXNoXCIsXG4gICAgLy8gICAgICAgICBcImVxdWFsc1wiXG4gICAgLy8gICAgICAgXSxcbiAgICAvLyAgICAgICBfc3R1ZmY6IFwiIy9jb21wbGV0ZWRcIlxuICAgIC8vICAgICB9LFxuICAgIC8vICAgICB0aGVuOiB7XG4gICAgLy8gICAgICAgX3Byb3RvOiBbXG4gICAgLy8gICAgICAgICBcImRvbWFpblwiLFxuICAgIC8vICAgICAgICAgXCJ0YXNrc1wiLFxuICAgIC8vICAgICAgICAgXCJjb21wbGV0ZWRcIixcbiAgICAvLyAgICAgICAgIFwiZmlsdGVyXCJcbiAgICAvLyAgICAgICBdLFxuICAgIC8vICAgICAgIF9zdHVmZjoge1xuICAgIC8vICAgICAgICAgX3Byb3RvOiBcIkxhbWJkYVwiLFxuICAgIC8vICAgICAgICAgdGFzazogeyBfcHJvdG86IFwiYXJndW1lbnRcIiwgdHlwZTogXCJUYXNrXCIgfSxcbiAgICAvLyAgICAgICAgIF9zdHVmZjogdHJ1ZVxuICAgIC8vICAgICAgIH1cbiAgICAvLyAgICAgfSxcbiAgICAvLyAgICAgZWxzZToge1xuICAgIC8vICAgICAgIF9wcm90bzogW1xuICAgIC8vICAgICAgICAgXCJkb21haW5cIixcbiAgICAvLyAgICAgICAgIFwidGFza3NcIixcbiAgICAvLyAgICAgICAgIFwiYWxsXCIsXG4gICAgLy8gICAgICAgICBcImZpbHRlclwiXG4gICAgLy8gICAgICAgXSxcbiAgICAvLyAgICAgICBfc3R1ZmY6IHtcbiAgICAvLyAgICAgICAgIF9wcm90bzogXCJMYW1iZGFcIixcbiAgICAvLyAgICAgICAgIHRhc2s6IHsgX3Byb3RvOiBcImFyZ3VtZW50XCIsIHR5cGU6IFwiVGFza1wiIH0sXG4gICAgLy8gICAgICAgICBfc3R1ZmY6IHRydWVcbiAgICAvLyAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAvLyAgIH1cbiAgICAvLyB9LFxuICAgIGJvZHk6IHtcbiAgICAgIF9wcm90bzogXCJCb2R5XCIsXG4gICAgICBfc3R1ZmY6IFtcbiAgICAgICAge1xuICAgICAgICAgIF9wcm90bzogXCJTZWN0aW9uXCIsXG4gICAgICAgICAgY2xhc3M6IFwidG9kb2FwcFwiLFxuICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfcHJvdG86IFwiRGl2XCIsXG4gICAgICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJIZWFkZXJcIixcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiBcImhlYWRlclwiLFxuICAgICAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiSDFcIixcbiAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidG9kb3NcIlxuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJJbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcIm5ldy10b2RvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiV2hhdCBuZWVkcyB0byBiZSBkb25lP1wiLFxuICAgICAgICAgICAgICAgICAgICAgIGF1dG9mb2N1czogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBjbGVhcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkV2ZW50TGlzdGVuZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlbGZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNldFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAga2V5dXA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJFdmVudExpc3RlbmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlDb2RlOiB7IF9wcm90bzogXCJBcmd1bWVudFwiLCB0eXBlOiBcIkxpdGVyYWxcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJpZlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImtleUNvZGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZXF1YWxzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogMTNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJTdHVmZlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRvbWFpblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGFza3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcInZhbHVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcImNsZWFyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIlNlY3Rpb25cIixcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiBcIm1haW5cIixcbiAgICAgICAgICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIklucHV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFwidG9nZ2xlLWFsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIlVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFwidG9kby1saXN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiZG9tYWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwidGFza3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJtYXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkxhbWJkYVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhc2s6IHsgX3Byb3RvOiBcIkFyZ3VtZW50XCIsIHR5cGU6IFwiVGFza1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJMaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGFza1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiRGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogXCJ2aWV3XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJJbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcInRvZ2dsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiY2hlY2tib3hcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJMYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGFza1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcImRlc3Ryb3lcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIklucHV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogXCJlZGl0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRhc2tcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJGb290ZXJcIixcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiBcImZvb3RlclwiLFxuICAgICAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiU3BhblwiLFxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcInRvZG8tY291bnRcIixcbiAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIlN0cm9uZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZG9tYWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRhc2tzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJTcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogXCIgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJTcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJpZlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRvbWFpblwiLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0YXNrc1wiLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb3VudFwiLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJlcXVhbHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbjogXCJpdGVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTogXCJpdGVtc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJTcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogXCIgbGVmdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIlVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFwiZmlsdGVyc1wiLFxuICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiTGlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiIy9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBcInNlbGVjdGVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFwiQWxsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJTcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiTGlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiIy9hY3RpdmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zdHVmZjogXCJBY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIlNwYW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJMaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfcHJvdG86IFwiQVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCIjL2NvbXBsZXRlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3N0dWZmOiBcIkNvbXBsZXRlZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJCdXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogXCJjbGVhci1jb21wbGV0ZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICBfc3R1ZmY6IFwiQ2xlYXIgQ29tcGxldGVkXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIF9wcm90bzogXCJGb290ZXJcIixcbiAgICAgICAgICBjbGFzczogXCJpbmZvXCIsXG4gICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIF9wcm90bzogXCJQXCIsXG4gICAgICAgICAgICAgIF9zdHVmZjogXCJEb3VibGUtY2xpY2sgdG8gZWRpdCBhIHRvZG9cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgX3Byb3RvOiBcIlBcIixcbiAgICAgICAgICAgICAgX3N0dWZmOiBbXG4gICAgICAgICAgICAgICAgXCJDcmVhdGVkIGJ5IFwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIF9wcm90bzogXCJBXCIsXG4gICAgICAgICAgICAgICAgICBocmVmOiBcImh0dHA6Ly9naXRodWIuY29tL2VtZWl0Y2gvXCIsXG4gICAgICAgICAgICAgICAgICBfc3R1ZmY6IFwiSGlkZXl1a2kgTU9SSVRBIChlbWVpdGNoKVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfcHJvdG86IFwiUFwiLFxuICAgICAgICAgICAgICBfc3R1ZmY6IFtcbiAgICAgICAgICAgICAgICBcIlBhcnQgb2YgXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgX3Byb3RvOiBcIkFcIixcbiAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cDovL3RvZG9tdmMuY29tXCIsXG4gICAgICAgICAgICAgICAgICBfc3R1ZmY6IFwiVG9kb01WQ1wiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICB9XG59O1xuLy8gY29uc29sZS5sb2coVG9kb01WQyk7XG5cbmZ1bmN0aW9uIGVxdWFscyhvMSwgbzIpIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG8xKSA9PT0gSlNPTi5zdHJpbmdpZnkobzIpO1xufVxuICBcbmNsYXNzIFN0YXRlIHtcbiAgY29uc3RydWN0b3IoaW5pdD17fSkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5pdCk7XG4gIH1cbn1cblxuY2xhc3MgRXJyb3IgZXh0ZW5kcyBTdGF0ZSB7XG59XG5cbmNsYXNzIFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbn1cblxuY2xhc3MgUmVxdWlyZWRQcm9wZXJ0eUVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuXG5jbGFzcyBWYWx1ZSBleHRlbmRzIFN0YXRlIHtcbn1cblxuY2xhc3MgRW50aXR5IGV4dGVuZHMgU3RhdGUge1xufVxuXG5jbGFzcyBQYXRoIGV4dGVuZHMgU3RhdGUge1xuICBzdGF0aWMgZ2VuZXJhdGVVVUlEKCkge1xuICAgIC8vIFVVSUQgdmVyIDQgLyBSRkMgNDEyMlxuICAgIHZhciB1dWlkID0gXCJcIiwgaSwgcmFuZG9tO1xuICAgIGZvciAoaSA9IDA7IGkgPCAzMjsgaSsrKSB7XG4gICAgICByYW5kb20gPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwO1xuICAgICAgXG4gICAgICBpZiAoaSA9PSA4IHx8IGkgPT0gMTIgfHwgaSA9PSAxNiB8fCBpID09IDIwKSB7XG4gICAgICAgIHV1aWQgKz0gXCItXCJcbiAgICAgIH1cbiAgICAgIHV1aWQgKz0gKGkgPT0gMTIgPyA0IDogKGkgPT0gMTYgPyAocmFuZG9tICYgMyB8IDgpIDogcmFuZG9tKSkudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICByZXR1cm4gdXVpZDtcbiAgfVxuXG4gIHN0YXRpYyB1dWlkKCkge1xuICAgIHJldHVybiBcInVybjp1dWlkOlwiICsgdGhpcy5nZW5lcmF0ZVVVSUQoKTtcbiAgfVxuICBcbiAgc3RhdGljIGlzVVVJRChrZXkpIHtcbiAgICByZXR1cm4ga2V5Lm1hdGNoKC9edXJuOnV1aWQ6Lyk7XG4gIH1cbiAgXG4gIHN0YXRpYyBpc05hbWUoa2V5KSB7XG4gICAgcmV0dXJuICF0aGlzLmlzVVVJRChrZXkpO1xuICB9XG4gIFxuICBzdGF0aWMgaXNDb25zdChrZXkpIHtcbiAgICByZXR1cm4gISFrZXkubWF0Y2goL15bQS1aXS8pO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4ua2V5cykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5rZXlzID0ga2V5cztcbiAgfVxuICBcbiAgZ2V0IHRvcCgpIHtcbiAgICByZXR1cm4gdGhpcy5rZXlzWzBdO1xuICB9XG4gIFxuICBnZXQgbGFzdCgpIHtcbiAgICByZXR1cm4gdGhpcy5rZXlzW3RoaXMua2V5cy5sZW5ndGgtMV07XG4gIH1cbiAgXG4gIGdldCByZXN0KCkge1xuICAgIHJldHVybiB0aGlzLmtleXMuc2xpY2UoMSk7XG4gIH1cbiAgXG4gIHBhcmVudCgpIHtcbiAgICBpZiAodGhpcy5rZXlzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgXG4gICAgY29uc3Qga2V5cyA9IHRoaXMua2V5cy5jb25jYXQoKTtcbiAgICBrZXlzLnBvcCgpO1xuICAgIHJldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RvciguLi5rZXlzKTtcbiAgfVxuICBcbiAgY2hpbGQoa2V5KSB7XG4gICAgY29uc3Qga2V5cyA9IHRoaXMua2V5cy5jb25jYXQoW2tleV0pO1xuICAgIHJldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3RvciguLi5rZXlzKTtcbiAgfVxufVxuXG5jbGFzcyBTdG9yZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYmluZGluZ3MgPSB7fVxuICAgIFxuICAgIC8vIHByZW1pdGl2ZXNcbiAgICB0aGlzLmFwcGVuZFN0YXRlKE9iamVjdC5hc3NpZ24obmV3IEJvb2xlYW4oZmFsc2UpLCB7XG4gICAgICBfbmFtZTogQm9vbGVhbi5uYW1lLCBcbiAgICAgIF9hYnN0cmFjdDogdHJ1ZVxuICAgIH0pKTtcbiAgICB0aGlzLmFwcGVuZFN0YXRlKE9iamVjdC5hc3NpZ24obmV3IE51bWJlcigwKSwge1xuICAgICAgX25hbWU6IE51bWJlci5uYW1lLFxuICAgICAgX2Fic3RyYWN0OiB0cnVlXG4gICAgfSkpO1xuICAgIHRoaXMuYXBwZW5kU3RhdGUoT2JqZWN0LmFzc2lnbihuZXcgU3RyaW5nKFwiXCIpLCB7XG4gICAgICBfbmFtZTogU3RyaW5nLm5hbWUsXG4gICAgICBfYWJzdHJhY3Q6IHRydWVcbiAgICB9KSk7XG4gICAgdGhpcy5hcHBlbmRTdGF0ZShPYmplY3QuYXNzaWduKG5ldyBBcnJheSgpLCB7XG4gICAgICBfbmFtZTogQXJyYXkubmFtZSxcbiAgICAgIF9hYnN0cmFjdDogdHJ1ZVxuICAgIH0pKTtcbiAgICB0aGlzLmFwcGVuZFN0YXRlKG5ldyBWYWx1ZSh7XG4gICAgICBfbmFtZTogVmFsdWUubmFtZSxcbiAgICAgIF9hYnN0cmFjdDogdHJ1ZVxuICAgIH0pKTtcbiAgICB0aGlzLmFwcGVuZFN0YXRlKG5ldyBFbnRpdHkoe1xuICAgICAgX25hbWU6IEVudGl0eS5uYW1lLFxuICAgICAgX2Fic3RyYWN0OiB0cnVlXG4gICAgfSkpO1xuICAgIFxuICAgIHRoaXMuYXBwZW5kU3RhdGUobmV3IEVycm9yKHtfbmFtZTogRXJyb3IubmFtZX0pKTtcbiAgICB0aGlzLmFwcGVuZFN0YXRlKG5ldyBUeXBlRXJyb3Ioe19uYW1lOiBUeXBlRXJyb3IubmFtZX0pKTtcbiAgICB0aGlzLmFwcGVuZFN0YXRlKG5ldyBSZXF1aXJlZFByb3BlcnR5RXJyb3Ioe19uYW1lOiBSZXF1aXJlZFByb3BlcnR5RXJyb3IubmFtZX0pKTtcbiAgfVxuICBcbiAgZ2V0UHJvdG9SZXNvdXJjZShzdGF0ZSkge1xuICAgIGNvbnN0IHByb3RvUGF0aCA9IHN0YXRlLl9wcm90bztcbiAgICBpZiAocHJvdG9QYXRoKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb2xsb3cocHJvdG9QYXRoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIFxuICByZXNvbHZlTmFtZShrZXkpIHtcbiAgICBpZiAoIVBhdGguaXNOYW1lKGtleSkpIHtcbiAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHV1aWQgPSB0aGlzLmJpbmRpbmdzW2tleV07XG4gICAgaWYgKCF1dWlkKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdXVpZDtcbiAgfVxuICAgIFxuICByZXNvbHZlUGF0aFRvcE5hbWUocGF0aCkge1xuICAgIGNvbnN0IHRvcCA9IHRoaXMucmVzb2x2ZU5hbWUocGF0aC50b3ApO1xuICAgIGlmICghdG9wKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gbmV3IFBhdGgodG9wLCAuLi5wYXRoLnJlc3QpO1xuICB9XG4gIFxuICBnZXRTdGF0ZShpZCkge1xuICAgIGlmICh0eXBlb2YoaWQpID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBjb25zdCBrZXkgPSB0aGlzLnJlc29sdmVOYW1lKGlkKTtcbiAgICAgIHJldHVybiB0aGlzW2tleV07XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHBhdGggPSB0aGlzLnJlc29sdmVQYXRoVG9wTmFtZShpZCk7XG4gICAgbGV0IHN0YXRlID0gdGhpcy5nZXRTdGF0ZShwYXRoLnRvcCk7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgcGF0aC5yZXN0KSB7XG4gICAgICBjb25zdCB2YWwgPSBzdGF0ZVtrZXldO1xuICAgICAgaWYgKCF2YWwpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH0gZWxzZSBpZiAodmFsIGluc3RhbmNlb2YgUGF0aCkge1xuICAgICAgICBzdGF0ZSA9IHRoaXMuZ2V0U3RhdGUodmFsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0YXRlID0gdmFsO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RhdGU7XG4gIH1cbiAgXG4gIGVudGl0aWVzKHN0YXRlKSB7XG4gICAgY29uc3QgZW50aXRpZXMgPSB7fTtcbiAgICBcbiAgICBsZXQgcHJvdG8gPSB0aGlzLmdldFByb3RvUmVzb3VyY2Uoc3RhdGUpO1xuICAgIHdoaWxlIChwcm90bykge1xuICAgICAgY29uc3Qgc3RhdGUgPSBwcm90by5nZXQoKTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBzdGF0ZSkge1xuICAgICAgICAvLyByZWplY3QgY29uc3Qga2V5IGZvciBuYW1lc3Bhc2VcbiAgICAgICAgaWYgKHN0YXRlLmhhc093blByb3BlcnR5KGtleSkgJiYgIVBhdGguaXNDb25zdChrZXkpKSB7IFxuICAgICAgICAgIGNvbnN0IHZhbCA9IHByb3RvLmZvbGxvdyhrZXkpLmdldCgpO1xuICAgICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBFbnRpdHkgJiYgIWVudGl0aWVzW2tleV0pIHtcbiAgICAgICAgICAgIGVudGl0aWVzW2tleV0gPSB2YWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHByb3RvID0gcHJvdG8ucHJvdG87XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBlbnRpdGllcztcbiAgfVxuICAgIFxuICBzZXRTdGF0ZShrZXksIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlID09PSBudWxsKSB7XG4gICAgICBkZWxldGUgdGhpc1trZXldO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgcmVzID0gdGhpcy5mb2xsb3coa2V5KTtcbiAgICBcbiAgICBjb25zdCBwcm90byA9IHRoaXMuZ2V0UHJvdG9SZXNvdXJjZShzdGF0ZSk7XG4gICAgY29uc3QgZXJyb3IgPSBwcm90byA/IHByb3RvLnZhbGlkYXRlKHN0YXRlKSA6IHVuZGVmaW5lZDtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRoaXNba2V5XSA9IGVycm9yO1xuICAgICAgcmV0dXJuIHRoaXMuZm9sbG93KGtleSk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IG5hbWUgPSBzdGF0ZS5fbmFtZTtcbiAgICBpZiAobmFtZSkge1xuICAgICAgdGhpcy5iaW5kaW5nc1tuYW1lXSA9IGtleTtcbiAgICAgIFxuICAgICAgaWYgKHJlcyAmJiByZXMubmFtZSAmJiByZXMubmFtZSAhPT0gbmFtZSkge1xuICAgICAgICBkZWxldGUgdGhpcy5iaW5kaW5nc1tyZXMubmFtZV07XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGFwcGVuZENoaWxkID0gKGNoaWxkKSA9PiB7XG4gICAgICBjb25zdCBjaGlsZElkID0gY2hpbGQuX3V1aWQgfHwgUGF0aC51dWlkKCk7XG4gICAgICBcbiAgICAgIGRlbGV0ZSBjaGlsZC5fdXVpZDtcbiAgICAgIGNoaWxkLl9wYXJlbnQgPSBuZXcgUGF0aChrZXkpO1xuICAgICAgXG4gICAgICB0aGlzLnNldFN0YXRlKGNoaWxkSWQsIGNoaWxkKTtcbiAgICAgIHJldHVybiBjaGlsZElkO1xuICAgIH07XG4gICAgXG4gICAgZm9yIChjb25zdCBrIGluIHN0YXRlKSB7XG4gICAgICBpZiAoc3RhdGUuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgY29uc3QgdiA9IHN0YXRlW2tdO1xuICAgICAgICBpZiAodiBpbnN0YW5jZW9mIFBhdGgpIHtcbiAgICAgICAgICAvLyByZXNvbHZlIG5hbWUgYW5kIHJlY3VyY2l2ZSBkZWZpbml0aW9uXG4gICAgICAgICAgc3RhdGVba10gPSB0aGlzLnJlc29sdmVQYXRoVG9wTmFtZSh2KTtcbiAgICAgICAgfSBlbHNlIGlmICh2IGluc3RhbmNlb2YgRW50aXR5KSB7XG4gICAgICAgICAgLy8gc2V0IGVudGl0eSBhcyBjaGlsZCByZXNvdXJjZVxuICAgICAgICAgIGNvbnN0IGVudGl0eSA9IHY7XG4gICAgICAgICAgY29uc3QgY2hpbGRJZCA9IGFwcGVuZENoaWxkKGVudGl0eSk7XG4gICAgICAgICAgc3RhdGVba10gPSBuZXcgUGF0aChjaGlsZElkKTtcbiAgICAgICAgfSBlbHNlIGlmICh2ID09PSBudWxsKSB7XG4gICAgICAgICAgLy8gcmVtb3ZlIG51bGwgcHJvcGVydHlcbiAgICAgICAgICBkZWxldGUgc3RhdGVba107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgIFxuICAgIGNvbnN0IGVudGl0aWVzID0gdGhpcy5lbnRpdGllcyhzdGF0ZSk7XG4gICAgZm9yIChjb25zdCBrIGluIGVudGl0aWVzKSB7XG4gICAgICBpZiAoZW50aXRpZXMuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgLy8gcmVtb3ZlIG9sZCBjaGlsZCBwYXJlbnRcbiAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgIGNvbnN0IG9sZCA9IHJlcy5mb2xsb3coayk7XG4gICAgICAgICAgaWYgKG9sZCkge1xuICAgICAgICAgICAgb2xkLnBhdGNoKHtfcGFyZW50OiBudWxsfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCBlbnRpdHkgPSBlbnRpdGllc1trXTtcbiAgICAgICAgY29uc3Qgb3ZlcnJpZGUgPSBzdGF0ZVtrXTtcbiAgICAgICAgY29uc3QgY2hpbGQgPSBvdmVycmlkZSA/IE9iamVjdC5hc3NpZ24oe30sIGVudGl0eSwgb3ZlcnJpZGUpIDogZW50aXR5O1xuICAgICAgICBjb25zdCBjaGlsZElkID0gYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICBzdGF0ZVtrXSA9IG5ldyBQYXRoKGNoaWxkSWQpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICB0aGlzW2tleV0gPSBzdGF0ZTtcbiAgICByZXR1cm4gdGhpcy5mb2xsb3coa2V5KTtcbiAgfVxuICBcbiAgYXBwZW5kU3RhdGUoc3RhdGUpIHtcbiAgICBjb25zdCBrZXkgPSBQYXRoLnV1aWQoKTtcbiAgICByZXR1cm4gdGhpcy5zZXRTdGF0ZShrZXksIHN0YXRlKTtcbiAgfVxuICAgIFxuICAvLyBzYW1lIGludGVyZmFjZSBmb3IgUmVzb3VyY2VcbiAgZm9sbG93KGlkKSB7XG4gICAgY29uc3QgcGF0aCA9IHRoaXMucmVzb2x2ZVBhdGhUb3BOYW1lKFxuICAgICAgdHlwZW9mKGlkKSA9PT0gXCJzdHJpbmdcIiA/IG5ldyBQYXRoKGlkKSA6IGlkXG4gICAgKTtcbiAgICBcbiAgICBpZiAoIXBhdGggfHwgIXRoaXMuZ2V0U3RhdGUocGF0aCkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBuZXcgUmVzb3VyY2UodGhpcywgcGF0aCk7XG4gIH1cbiAgICBcbiAgcG9zdChzdGF0ZSkge1xuICAgIHJldHVybiB0aGlzLmFwcGVuZFN0YXRlKHN0YXRlKTtcbiAgfVxufVxuXG5jbGFzcyBSZXNvdXJjZSB7XG4gIGNvbnN0cnVjdG9yKHN0b3JlLCBwYXRoKSB7XG4gICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMucGF0aCA9IHBhdGg7XG4gIH1cbiAgXG4gIGdldCBwZXJtYW5lbnQoKSB7XG4gICAgLy8gbm9ybWFsaXphdGlvblxuICAgIHJldHVybiB0aGlzLm5vcm1hbGl6ZSgpO1xuICB9XG4gIFxuICBnZXQgc3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0KCk7XG4gIH1cbiAgICBcbiAgZ2V0IHByb3RvKCkge1xuICAgIHJldHVybiB0aGlzLnN0b3JlLmdldFByb3RvUmVzb3VyY2UodGhpcy5zdGF0ZSk7XG4gIH1cbiAgXG4gIGdldCBwYXJlbnQoKSB7XG4gICAgY29uc3QgcGFyZW50UGF0aCA9IHRoaXMuc3RhdGUuX3BhcmVudDtcbiAgICBpZiAocGFyZW50UGF0aCkge1xuICAgICAgcmV0dXJuIHRoaXMuc3RvcmUuZm9sbG93KHBhcmVudFBhdGgpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIFxuICBnZXQgaXNBYnN0cmFjdCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5fYWJzdHJhY3Q7XG4gIH1cbiAgXG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLl9uYW1lO1xuICB9XG4gIFxuICBub3JtYWxpemUoKSB7XG4gICAgbGV0IHJlcyA9IHRoaXMuc3RvcmU7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5wYXRoLmtleXMpIHtcbiAgICAgIHJlcyA9IHJlcy5mb2xsb3coa2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuICBcbiAgZXF1YWxzKG90aGVyKSB7XG4gICAgaWYgKG90aGVyIGluc3RhbmNlb2YgUmVzb3VyY2UpIHtcbiAgICAgIHJldHVybiBlcXVhbHModGhpcy5wZXJtYW5lbnQucGF0aCwgb3RoZXIucGVybWFuZW50LnBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzdGF0ZSBlcXVpdmFsZW5jeVxuICAgICAgcmV0dXJuIGVxdWFscyh0aGlzLnN0YXRlLCBvdGhlcik7XG4gICAgfVxuICB9XG4gIFxuICB2YWxpZGF0ZShzdGF0ZSkge1xuICAgIGZvciAodmFyIGtleSBpbiBzdGF0ZSkge1xuICAgICAgaWYgKHN0YXRlLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgY29uc3QgdmFsID0gc3RhdGVba2V5XTtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuZm9sbG93KGtleSk7XG4gICAgICAgIGNvbnN0IHByb3BTdGF0ZSA9IChwcm9wICYmIHByb3AuZ2V0KCkpIHx8IHByb3A7XG4gICAgICAgIGlmIChwcm9wU3RhdGUgXG4gICAgICAgICAgJiYgIWVxdWFscyhwcm9wU3RhdGUsIHZhbC5fX3Byb3RvX18pIFxuICAgICAgICAgICYmICFlcXVhbHMocHJvcFN0YXRlLl9fcHJvdG9fXywgdmFsLl9fcHJvdG9fXykpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IFZhbHVlKHtcbiAgICAgICAgICAgIF9wcm90bzogbmV3IFBhdGgoVHlwZUVycm9yLm5hbWUpLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGN1cnJlbnQgPSB0aGlzLmdldCgpO1xuICAgIGZvciAodmFyIGtleSBpbiBjdXJyZW50KSB7XG4gICAgICBpZiAoY3VycmVudC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGlmICh0aGlzLmZvbGxvdyhrZXkpLmlzQWJzdHJhY3QgJiYgc3RhdGVba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBWYWx1ZSh7XG4gICAgICAgICAgICBfcHJvdG86IG5ldyBQYXRoKFJlcXVpcmVkUHJvcGVydHlFcnJvci5uYW1lKSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAgIFxuICBmb2xsb3coa2V5KSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldCgpO1xuICAgIGNvbnN0IHZhbCA9IHN0YXRlW2tleV07XG4gICAgaWYgKHZhbCBpbnN0YW5jZW9mIFBhdGgpIHsgLy8gcmVmZXJlbmNlIGVudGl0eVxuICAgICAgcmV0dXJuIHRoaXMuc3RvcmUuZm9sbG93KHZhbCk7XG4gICAgfSBlbHNlIGlmICh2YWwgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnByb3RvICE9PSB1bmRlZmluZWQpIHsgLy8gcHJvdG90eXBlIGNoYWluXG4gICAgICByZXR1cm4gdGhpcy5wcm90by5mb2xsb3coa2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuc3RvcmUuZm9sbG93KHRoaXMucGF0aC5jaGlsZChrZXkpKTtcbiAgICB9XG4gIH1cbiAgXG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZS5nZXRTdGF0ZSh0aGlzLnBhdGgpO1xuICB9XG4gIFxuICBwdXQoc3RhdGUpIHtcbiAgICBjb25zdCBwYXJlbnRQYXRoID0gdGhpcy5wYXRoLnBhcmVudCgpO1xuICAgIGlmIChwYXJlbnRQYXRoKSB7XG4gICAgICB0aGlzLnN0b3JlLmZvbGxvdyhwYXJlbnRQYXRoKS5wYXRjaCh7W3RoaXMucGF0aC5sYXN0XTogc3RhdGV9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdG9yZS5zZXRTdGF0ZSh0aGlzLnBhdGgudG9wLCBzdGF0ZSk7XG4gICAgfSAgICBcbiAgfVxuXG4gIHBhdGNoKGRpZmYpIHtcbiAgICBjb25zdCBjdXJyZW50ID0gdGhpcy5nZXQoKTtcbiAgICBjb25zdCBzdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIGN1cnJlbnQsIGRpZmYpO1xuICAgIHRoaXMucHV0KHN0YXRlKTtcbiAgfVxuICBcbiAgLy8gdG9kbzogcG9zdOOCkui/veWKoOOBmeOCiyhyZXNvdXJjZeOBjHByb3Rv44Gr44Gq44KLPylcbn1cblxuXG4vLyB0ZXN0IHN1aXRlXG5jb25zdCBzdG9yZSA9IG5ldyBTdG9yZSgpO1xuXG5jb25zdCBwMSA9IHN0b3JlLnBvc3Qoe1xuICBfbmFtZTogXCJQcm90bzFcIixcbiAgZm9vOiAxLFxuICBiYXI6IDIsXG4gIGZpejogOVxufSk7XG5jb25zdCByMmlkID0gUGF0aC51dWlkKCk7XG5jb25zdCByMSA9IHN0b3JlLnBvc3Qoe1xuICBfcHJvdG86IHAxLnBhdGgsXG4gIGZvbzogMywgXG4gIGJhcjogNCxcbiAgYmF6OiBuZXcgUGF0aChyMmlkKVxufSk7XG5jb25zdCByMiA9IHN0b3JlLnNldFN0YXRlKHIyaWQsIHtcbiAgX3Byb3RvOiBwMS5wYXRoLFxuICBmb286IDUsXG4gIGJhcjogNixcbiAgYmF6OiByMS5wYXRoXG59KTtcbmNvbnN0IHIzID0gc3RvcmUucG9zdCh7XG4gIF9wcm90bzogcDEucGF0aCxcbiAgZm9vOiA1LFxuICBiYXI6IDYsXG4gIGJhejogcjEucGF0aFxufSk7XG5cbi8vIHJlc291cmNlIGdlbmVyYXRpb25cbmNvbnNvbGUuYXNzZXJ0KHIxLnBhdGggaW5zdGFuY2VvZiBQYXRoKTtcbmNvbnNvbGUuYXNzZXJ0KHIyLnBhdGggaW5zdGFuY2VvZiBQYXRoKTtcblxuLy8gcmVzb3VyY2UgcHJvcGVydHkgYWNjZXNzXG5jb25zb2xlLmFzc2VydChyMS5mb2xsb3coXCJmb29cIikuZXF1YWxzKDMpKTtcbmNvbnNvbGUuYXNzZXJ0KHIxLmZvbGxvdyhcImJhclwiKS5lcXVhbHMoNCkpO1xuY29uc29sZS5hc3NlcnQocjIuZm9sbG93KFwiZm9vXCIpLmVxdWFscyg1KSk7XG5jb25zb2xlLmFzc2VydChyMi5mb2xsb3coXCJiYXJcIikuZXF1YWxzKDYpKTtcblxuLy8gY2lyY3VsYXIgcmVmZXJlbmNpbmdcbmNvbnNvbGUuYXNzZXJ0KHIyLmZvbGxvdyhcImJhelwiKS5lcXVhbHMocjEpKTtcbmNvbnNvbGUuYXNzZXJ0KHIyLmZvbGxvdyhcImJhelwiKS5mb2xsb3coXCJiYXpcIikuZXF1YWxzKHIyKSk7XG5jb25zb2xlLmFzc2VydChyMi5mb2xsb3coXCJiYXpcIikuZm9sbG93KFwiYmF6XCIpLmZvbGxvdyhcImJhelwiKS5lcXVhbHMocjEpKTtcblxuLy8gcHJvdG90eXBlIGRlZmluaXRpb25cbmNvbnNvbGUuYXNzZXJ0KHIyLmZvbGxvdyhcIl9wcm90b1wiKS5lcXVhbHMocDEpKTtcbmNvbnNvbGUuYXNzZXJ0KHIyLnByb3RvLmVxdWFscyhwMSkpO1xuY29uc29sZS5hc3NlcnQocjIucHJvdG8ubmFtZSA9PT0gXCJQcm90bzFcIik7XG5cbi8vIGdldCBtZXRob2QgcmV0dXJucyByYXcgcGF0aFxuY29uc29sZS5hc3NlcnQoZXF1YWxzKHN0b3JlLmdldFN0YXRlKFwiUHJvdG8xXCIpLCBwMS5nZXQoKSkpO1xuLy8gcmVzb3VyY2UgbWV0aG9kIHJlc29sdmVzIGlkIHJlZmVyZW5jZVxuY29uc29sZS5hc3NlcnQoc3RvcmUuZm9sbG93KFwiUHJvdG8xXCIpLmVxdWFscyhwMSkpO1xuXG4vLyBwcm90b3R5cGUgY2hhaW5cbmNvbnNvbGUuYXNzZXJ0KHIyLmZvbGxvdyhcImZpelwiKS5lcXVhbHMoOSkpO1xuXG4vLyBlcXVpdmFsZW5jeVxuY29uc29sZS5hc3NlcnQocjIuZXF1YWxzKHIyKSk7XG5jb25zb2xlLmFzc2VydCghcjIuZXF1YWxzKHIzKSk7XG5jb25zb2xlLmFzc2VydChyMi5lcXVhbHMocjIuZ2V0KCkpKTsgLy8gc3RhdGUgZXF1aXZhbGVuY3lcbmNvbnNvbGUuYXNzZXJ0KGVxdWFscyhyMi5nZXQoKSwgcjMuZ2V0KCkpKTtcbmNvbnNvbGUuYXNzZXJ0KCFlcXVhbHMocjIuZ2V0KCkscjEuZ2V0KCkpKTtcblxuXG4vLyBlbnRpdHkgc2NoZW1hIGZvciBjb21wb3NpdGlvblxuY29uc3QgazIgPSBcIlByb3RvMlwiO1xuY29uc3QgcDIgPSBzdG9yZS5wb3N0KHtcbiAgX25hbWU6IGsyLFxuICBmb286IG5ldyBFbnRpdHkoe1xuICAgIGJhcjogMyxcbiAgICBiYXo6IDQsXG4gIH0pLFxufSk7XG5jb25zdCByNCA9IHN0b3JlLnBvc3Qoe1xuICBfcHJvdG86IG5ldyBQYXRoKGsyKSxcbiAgZm9vOiB7XG4gICAgYmF6OiA1LFxuICB9LFxuICBmaXo6IDksXG59KTtcblxuLy8gcHJvdG90eXBlIGNoYWluIGJ5IGVudGl0eVxuY29uc29sZS5hc3NlcnQocjQuZm9sbG93KFwiZm9vXCIpLmZvbGxvdyhcImJhclwiKS5lcXVhbHMoMykpO1xuLy8gcGFyZW50IGVudGl0eSBhY2Nlc3NcbmNvbnNvbGUuYXNzZXJ0KHI0LmZvbGxvdyhcImZvb1wiKS5wYXJlbnQuZXF1YWxzKHI0KSk7XG4vLyBvdmVycmlkZSBjaGlsZCBlbnRpdHkgcHJvcGVydHlcbmNvbnNvbGUuYXNzZXJ0KHI0LmZvbGxvdyhcImZvb1wiKS5mb2xsb3coXCJiYXpcIikuZXF1YWxzKDUpKTtcbi8vIGdldCBieSBwYXRoXG5jb25zb2xlLmFzc2VydChzdG9yZS5mb2xsb3cobmV3IFBhdGgocjQucGF0aC50b3ApKS5mb2xsb3coXCJmb29cIikuZm9sbG93KFwiYmF6XCIpLmVxdWFscyg1KSk7XG5jb25zb2xlLmFzc2VydChzdG9yZS5mb2xsb3cobmV3IFBhdGgocjQucGF0aC50b3AsIFwiZm9vXCIpKS5mb2xsb3coXCJiYXpcIikuZXF1YWxzKDUpKTtcbmNvbnNvbGUuYXNzZXJ0KHN0b3JlLmZvbGxvdyhuZXcgUGF0aChyNC5wYXRoLnRvcCwgXCJmb29cIiwgXCJiYXpcIikpLmVxdWFscyg1KSk7XG5cbi8vIHVwZGF0ZSBwcm9wZXJ0eVxuY29uc29sZS5hc3NlcnQocjQuZm9sbG93KFwiZml6XCIpLmVxdWFscyg5KSk7XG5yNC5wYXRjaCh7Zml6OiA4fSk7XG5jb25zb2xlLmFzc2VydChyNC5mb2xsb3coXCJmaXpcIikuZXF1YWxzKDgpKTtcblxuLy8gdXBkYXRlIGNoaWxkIHByb3BlcnR5XG5yNC5mb2xsb3coXCJmb29cIikucGF0Y2goe2JhejogNn0pO1xuY29uc29sZS5hc3NlcnQocjQuZm9sbG93KFwiZm9vXCIpLmZvbGxvdyhcImJhelwiKS5lcXVhbHMoNikpO1xuXG4vLyB1cGRhdGUgYnkgc3RhdGVcbnI0LnBhdGNoKHtcbiAgZml6OiA5LFxufSk7XG5jb25zb2xlLmFzc2VydChyNC5mb2xsb3coXCJmaXpcIikuZXF1YWxzKDkpKTtcblxuLy8gdXBkYXRlIGNoaWxkIGJ5IHN0YXRlXG5yNC5mb2xsb3coXCJmb29cIikucGF0Y2goe1xuICBiYXo6IDcsXG59KTtcbmNvbnNvbGUuYXNzZXJ0KHI0LmZvbGxvdyhcImZvb1wiKS5mb2xsb3coXCJiYXpcIikuZXF1YWxzKDcpKTtcblxuLy8gdXBkYXRlIHBhcmVudCBhbmQgY2hpbGQgYnkgc3RhdGVcbmNvbnN0IG9sZEZvbyA9IHI0LmZvbGxvdyhcImZvb1wiKTtcbnI0LnBhdGNoKHtcbiAgZml6OiA3LFxuICBmb286IHtcbiAgICBiYXo6IDgsXG4gIH1cbn0pO1xuY29uc29sZS5hc3NlcnQocjQuZm9sbG93KFwiZml6XCIpLmVxdWFscyg3KSk7XG5jb25zb2xlLmFzc2VydChyNC5mb2xsb3coXCJmb29cIikuZm9sbG93KFwiYmF6XCIpLmVxdWFscyg4KSk7XG5jb25zb2xlLmFzc2VydCghZXF1YWxzKHI0LmZvbGxvdyhcImZvb1wiKS5wYXRoLCBvbGRGb28ucGF0aCkpOyAvLyB1cGRhdGVkXG5jb25zb2xlLmFzc2VydChvbGRGb28uZ2V0KCkuX3BhcmVudCA9PT0gdW5kZWZpbmVkKTtcbmNvbnNvbGUuYXNzZXJ0KG9sZEZvby5wYXJlbnQgPT09IHVuZGVmaW5lZCk7XG5cbi8vIHVwZGF0ZSBwYXJlbnQgYW5kIGNoaWxkIGJ5IHN0YXRlIHdpdGggY2hpbGQgaWRlbnRpZmllclxuY29uc3QgZm9vUGF0aCA9IHI0LmZvbGxvdyhcImZvb1wiKS5wYXRoO1xucjQucGF0Y2goe1xuICBmaXo6IDYsIFxuICBmb286IHtcbiAgICBfdXVpZDogZm9vUGF0aC50b3AsXG4gICAgYmF6OiA5LFxuICB9XG59KTtcbmNvbnNvbGUuYXNzZXJ0KHI0LmZvbGxvdyhcImZpelwiKS5lcXVhbHMoNikpO1xuY29uc29sZS5hc3NlcnQocjQuZm9sbG93KFwiZm9vXCIpLmZvbGxvdyhcImJhelwiKS5lcXVhbHMoOSkpO1xuY29uc29sZS5hc3NlcnQoZXF1YWxzKHI0LmZvbGxvdyhcImZvb1wiKS5wYXRoLCBmb29QYXRoKSk7IC8vIG5vdCB1cGRhdGVkXG5cbi8vIHVwZGF0ZSBwcm90bydzIGtleSBuYW1lXG5jb25zb2xlLmFzc2VydChzdG9yZS5mb2xsb3coXCJQcm90bzJcIikpO1xuY29uc29sZS5hc3NlcnQoIXN0b3JlLmZvbGxvdyhcIlByb3RvMmRhc2hcIikpO1xuY29uc3QgazJkYXNoID0gbmV3IFBhdGgoXCJQcm90bzJkYXNoXCIpO1xucDIucGF0Y2goe19uYW1lOiBrMmRhc2gudG9wfSk7XG5jb25zb2xlLmFzc2VydCghc3RvcmUuZm9sbG93KFwiUHJvdG8yXCIpKTtcbmNvbnNvbGUuYXNzZXJ0KHI0LnByb3RvLm5hbWUgPT09IFwiUHJvdG8yZGFzaFwiKTtcbmNvbnNvbGUuYXNzZXJ0KHN0b3JlLmZvbGxvdyhcIlByb3RvMmRhc2hcIikuZXF1YWxzKHAyKSk7XG5cblxuLy8gbmVzdGVkIHN0YXRlIHJlc291cmNlXG5jb25zdCByNSA9IHN0b3JlLnBvc3Qoe1xuICBob2dlOiAzLFxuICBmdWdhOiA0LFxufSk7XG5jb25zdCByNiA9IHN0b3JlLnBvc3Qoe1xuICBmb286IHtcbiAgICBfcHJvdG86IHI1LnBhdGgsXG4gICAgaG9nZTogNSxcbiAgfVxufSk7XG5jb25zb2xlLmFzc2VydChyNi5mb2xsb3coXCJmb29cIikuZm9sbG93KFwiaG9nZVwiKS5lcXVhbHMoNSkpO1xuY29uc29sZS5hc3NlcnQocjYuZm9sbG93KFwiZm9vXCIpLnByb3RvLmZvbGxvdyhcImhvZ2VcIikuZXF1YWxzKDMpKTtcblxuXG4vLyB1cGRhdGUgZGVlcCBuZXN0ZWQgc3RhdGVcbmNvbnN0IHI3ID0gc3RvcmUucG9zdCh7XG4gIGZvbzoge1xuICAgIGJhcjoge1xuICAgICAgYmF6OiB7XG4gICAgICAgIGZpejogNSxcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuY29uc29sZS5hc3NlcnQocjcuZm9sbG93KFwiZm9vXCIpLmZvbGxvdyhcImJhclwiKS5mb2xsb3coXCJiYXpcIikuZm9sbG93KFwiZml6XCIpLmVxdWFscyg1KSk7XG5yNy5mb2xsb3coXCJmb29cIikuZm9sbG93KFwiYmFyXCIpLmZvbGxvdyhcImJhelwiKS5wYXRjaCh7Zml6OiA3fSk7XG5jb25zb2xlLmFzc2VydChyNy5mb2xsb3coXCJmb29cIikuZm9sbG93KFwiYmFyXCIpLmZvbGxvdyhcImJhelwiKS5mb2xsb3coXCJmaXpcIikuZXF1YWxzKDcpKTtcbnI3LmZvbGxvdyhcImZvb1wiKS5mb2xsb3coXCJiYXJcIikuZm9sbG93KFwiYmF6XCIpLnBhdGNoKHtmaXo6IDh9KTtcbmNvbnNvbGUuYXNzZXJ0KHI3LmZvbGxvdyhcImZvb1wiKS5mb2xsb3coXCJiYXJcIikuZm9sbG93KFwiYmF6XCIpLmZvbGxvdyhcImZpelwiKS5lcXVhbHMoOCkpO1xuXG5cbi8vIHJlY3VyY2l2ZSBkZWZpbml0aW9uXG5jb25zdCBsaXN0ID0gc3RvcmUucG9zdCh7XG4gIF9uYW1lOiBcIkxpc3RcIixcbiAgY2FyOiBuZXcgUGF0aChcIkVudGl0eVwiKSxcbiAgY2RyOiBuZXcgUGF0aChcIkxpc3RcIiksXG59KTtcbmNvbnNvbGUuYXNzZXJ0KHN0b3JlLmZvbGxvdyhcIkxpc3RcIikuZm9sbG93KFwiY2RyXCIpLmVxdWFscyhzdG9yZS5mb2xsb3coXCJMaXN0XCIpKSk7XG5cblxuLy8gYWxnZWJyYWljIGRhdGEgdHlwZVxuLy8gZS5nLiBodHRwOi8vcWlpdGEuY29tL3htZXRhL2l0ZW1zLzkxZGZiMjRmYTg3YzNhOWY1OTkzXG5jb25zdCBjb2xvciA9IHN0b3JlLnBvc3Qoe1xuICBfcHJvdG86IG5ldyBQYXRoKFZhbHVlLm5hbWUpLFxuICBfbmFtZTogXCJDb2xvclwiLFxuICBSZWQ6IG5ldyBFbnRpdHkoeyBcbiAgICBfcHJvdG86IG5ldyBQYXRoKFwiQ29sb3JcIiksXG4gIH0pLFxuICBCbHVlOiBuZXcgRW50aXR5KHsgXG4gICAgX3Byb3RvOiBuZXcgUGF0aChcIkNvbG9yXCIpLFxuICB9KSxcbiAgR3JlZW46IG5ldyBFbnRpdHkoeyBcbiAgICBfcHJvdG86IG5ldyBQYXRoKFwiQ29sb3JcIiksXG4gIH0pLFxuICBSR0I6IG5ldyBFbnRpdHkoe1xuICAgIF9wcm90bzogbmV3IFBhdGgoXCJDb2xvclwiKSxcbiAgICByOiBuZXcgUGF0aChcIk51bWJlclwiKSxcbiAgICBnOiBuZXcgUGF0aChcIk51bWJlclwiKSxcbiAgICBiOiBuZXcgUGF0aChcIk51bWJlclwiKSxcbiAgfSksXG59KTtcblxuLy8gbmFtZXNwYWNlICYgcHJvdG9cbmNvbnNvbGUuYXNzZXJ0KHN0b3JlLmZvbGxvdyhcIkNvbG9yXCIpLmVxdWFscyhjb2xvcikpO1xuY29uc29sZS5hc3NlcnQoc3RvcmUuZm9sbG93KFwiQ29sb3JcIikuZm9sbG93KFwiUmVkXCIpLnByb3RvLmVxdWFscyhjb2xvcikpO1xuY29uc29sZS5hc3NlcnQoc3RvcmUuZm9sbG93KFwiQ29sb3JcIikuZm9sbG93KFwiUkdCXCIpLnByb3RvLmVxdWFscyhjb2xvcikpO1xuXG4vLyBjb25jcmV0ZSByZXNvdXJjZVxuY29uc3QgYzEgPSBzdG9yZS5wb3N0KHtcbiAgX3Byb3RvOiBuZXcgUGF0aChcIkNvbG9yXCIsIFwiUkdCXCIpLFxuICByOiA1LFxuICBnOiA2LFxuICBiOiA3XG59KTtcbmNvbnNvbGUuYXNzZXJ0KGMxLnByb3RvLmVxdWFscyhjb2xvci5mb2xsb3coXCJSR0JcIikpKTtcblxuLy8gcHJlbWl0aXZlIHR5cGUgZXJyb3JcbmNvbnN0IGVycjEgPSBzdG9yZS5wb3N0KHtcbiAgX3Byb3RvOiBuZXcgUGF0aChcIkNvbG9yXCIsIFwiUkdCXCIpLFxuICByOiA1LFxuICBnOiA2LFxuICBiOiBcImludmFsaWRcIixcbn0pO1xuY29uc29sZS5hc3NlcnQoZXJyMS5wcm90by5lcXVhbHMoc3RvcmUuZm9sbG93KFwiVHlwZUVycm9yXCIpKSk7XG5cbi8vIHJlcXVpcmVkIHByb3BlcnR5IGVycm9yXG5jb25zdCBlcnIyID0gc3RvcmUucG9zdCh7XG4gIF9wcm90bzogbmV3IFBhdGgoXCJDb2xvclwiLCBcIlJHQlwiKSxcbiAgcjogNSxcbiAgZzogNixcbiAgLy8gYjogXCJub3RoaW5nXCIsXG59KTtcbmNvbnNvbGUuYXNzZXJ0KGVycjIucHJvdG8uZXF1YWxzKHN0b3JlLmZvbGxvdyhcIlJlcXVpcmVkUHJvcGVydHlFcnJvclwiKSkpO1xuXG5cbmNvbnNvbGUubG9nKFwiYWxsIHRlc3RzIHN1Y2NlZWRlZC5cIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);