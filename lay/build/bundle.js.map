{"version":3,"sources":["webpack:///webpack/bootstrap 426c91c4be1643a3f4b0","webpack:///./src/app.js","webpack:///./~/bidirectional-map/dist/index.js","webpack:///./src/todomvc.js","webpack:///./src/state.js","webpack:///./src/error.js","webpack:///./src/utils.js","webpack:///./src/entity.js","webpack:///./src/value.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;AChEA;;AAE0B;AAC1B;AACA;AACA;AACA;AACkD;;AAElD;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,kFAAgC,oEAAkB;AAClD,oFAAoC,sEAAsB;AAC1D,gGAAgD,kFAAkC;AAClF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,KAAK,0DAA0D;AAC/D;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE,KAAK;AACL;AACA,K;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,mIAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,8HAAuD;;AAEvD;AACA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oDAAoD,OAAO;AAC3D;AACA,oDAAoD,OAAO;AAC3D;;;AAGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA,qE;AACA;AACA,GAAG;AACH,sE;AACA;AACA,GAAG;AACH,uE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,oC;;;;;;;;;;;;AChoBA;;AAEA;AACA;AACA,CAAC;;AAED,iCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mFAAmF,gEAAgE;AACnJ;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;AACA;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,kCAAkC,sCAAsC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,+B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;;;;ACpaA;AACA,qBAAqB;AACrB;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACJA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACTA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;ACHA;;AAEA;AACA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 426c91c4be1643a3f4b0","import BiMap from 'bidirectional-map';\n\nimport { flatten, equals } from './utils';\nimport TodoMVC from './todomvc';\nimport State from './state';\nimport Value from './value';\nimport Entity from './entity';\nimport Error, { TypeError, RequiredPropertyError } from './error';\n\nclass Path extends State {\n  static generateUUID() {\n    // UUID ver 4 / RFC 4122\n    var uuid = \"\", i, random;\n    for (i = 0; i < 32; i++) {\n      random = Math.random() * 16 | 0;\n      \n      if (i == 8 || i == 12 || i == 16 || i == 20) {\n        uuid += \"-\"\n      }\n      uuid += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return uuid;\n  }\n\n  static uuid() {\n    return \"urn:uuid:\" + this.generateUUID();\n  }\n  \n  static isUUID(key) {\n    return key.match(/^urn:uuid:/);\n  }\n  \n  static isName(key) {\n    return !this.isUUID(key);\n  }\n  \n  static isConst(key) {\n    return !!key.match(/^[A-Z]/);\n  }\n\n  constructor(...keys) {\n    super();\n    this.keys = keys;\n  }\n  \n  get top() {\n    return this.keys[0];\n  }\n  \n  get last() {\n    return this.keys[this.keys.length-1];\n  }\n  \n  get rest() {\n    return this.keys.slice(1);\n  }\n  \n  parent() {\n    if (this.keys.length === 1) {\n      return undefined;\n    }\n    \n    const keys = this.keys.concat();\n    keys.pop();\n    return new this.constructor(...keys);\n  }\n  \n  child(key) {\n    const keys = this.keys.concat([key]);\n    return new this.constructor(...keys);\n  }\n}\n\nclass Store {\n  constructor() {\n    this.bindings = new BiMap();\n    \n    // premitives\n    this.appendState(Object.assign(new Boolean(false), {\n      _name: Boolean.name, \n      _abstract: true\n    }));\n    this.appendState(Object.assign(new Number(0), {\n      _name: Number.name,\n      _abstract: true\n    }));\n    this.appendState(Object.assign(new String(\"\"), {\n      _name: String.name,\n      _abstract: true\n    }));\n    this.appendState(Object.assign(new Array(), {\n      _name: Array.name,\n      _abstract: true\n    }));\n    this.appendState(new Value({\n      _name: Value.name,\n      _abstract: true\n    }));\n    this.appendState(new Entity({\n      _name: Entity.name,\n      _abstract: true\n    }));\n    \n    this.appendState(new Error({_name: Error.name}));\n    this.appendState(new TypeError({_name: TypeError.name}));\n    this.appendState(new RequiredPropertyError({_name: RequiredPropertyError.name}));\n  }\n  \n  getProtoResource(state) {\n    const protoPath = state._proto;\n    if (protoPath) {\n      return this.follow(protoPath);\n    }\n\n    return undefined;\n  }\n  \n  resolveName(key) {\n    if (!Path.isName(key)) {\n      return key;\n    }\n    \n    const uuid = this.bindings.get(key);\n    if (!uuid) {\n      return undefined;\n    }\n    \n    return uuid;\n  }\n    \n  resolvePathTopName(path) {\n    const top = this.resolveName(path.top);\n    if (!top) {\n      return undefined;\n    }\n    \n    return new Path(top, ...path.rest);\n  }\n  \n  getState(id) {\n    if (typeof(id) === \"string\") {\n      const key = this.resolveName(id);\n      return this[key];\n    }\n    \n    const path = this.resolvePathTopName(id);\n    let state = this.getState(path.top);\n    for (const key of path.rest) {\n      const val = state[key];\n      if (!val) {\n        return undefined;\n      } else if (val instanceof Path) {\n        state = this.getState(val);\n      } else {\n        state = val;\n      }\n    }\n    return state;\n  }\n  \n  entities(state) {\n    const entities = {};\n    \n    let proto = this.getProtoResource(state);\n    while (proto) {\n      const state = proto.get();\n      for (var key in state) {\n        // reject const key for namespase\n        if (state.hasOwnProperty(key) && !Path.isConst(key)) { \n          const val = proto.follow(key).get();\n          if (val instanceof Entity && !entities[key]) {\n            entities[key] = val;\n          }\n        }\n      }\n      \n      proto = proto.proto;\n    }\n    \n    return entities;\n  }\n    \n  setState(key, state) {\n    if (state === null) {\n      delete this[key];\n      return undefined;\n    }\n    \n    const res = this.follow(key);\n    \n    const proto = this.getProtoResource(state);\n    const error = proto ? proto.validate(state) : undefined;\n    if (error) {\n      this[key] = error;\n      return this.follow(key);\n    }\n    \n    const name = state._name;\n    if (name) {\n      this.bindings.set(name, key);\n    }\n    \n    const appendChild = (child) => {\n      const childId = child._uuid || Path.uuid();\n      \n      delete child._uuid;\n      child._parent = new Path(key);\n      \n      this.setState(childId, child);\n      return childId;\n    };\n    \n    for (const k in state) {\n      if (state.hasOwnProperty(k)) {\n        const v = state[k];\n        if (v instanceof Path) {\n          // resolve name and recurcive definition\n          state[k] = this.resolvePathTopName(v);\n        } else if (v instanceof Entity) {\n          // set entity as child resource\n          const entity = v;\n          const childId = appendChild(entity);\n          state[k] = new Path(childId);\n        } else if (v === null) {\n          // remove null property\n          delete state[k];\n        }\n      }\n    }\n     \n    const entities = this.entities(state);\n    for (const k in entities) {\n      if (entities.hasOwnProperty(k)) {\n        // remove old child parent\n        if (res) {\n          const old = res.follow(k);\n          if (old) {\n            old.patch({_parent: null});\n          }\n        }\n        \n        const entity = entities[k];\n        const override = state[k];\n        const child = override ? Object.assign({}, entity, override) : entity;\n        const childId = appendChild(child);\n        state[k] = new Path(childId);\n      }\n    }\n    \n    this[key] = state;\n    return this.follow(key);\n  }\n  \n  appendState(state) {\n    const key = Path.uuid();\n    return this.setState(key, state);\n  }\n    \n  // same interface for Resource\n  follow(id) {\n    const path = this.resolvePathTopName(\n      typeof(id) === \"string\" ? new Path(id) : id\n    );\n    \n    if (!path || !this.getState(path)) {\n      return undefined;\n    }\n    \n    return new Resource(this, path);\n  }\n    \n  post(state) {\n    return this.appendState(state);\n  }\n}\n\nclass Resource {\n  constructor(store, path) {\n    this.store = store;\n    this.path = path;\n  }\n  \n  get permanent() {\n    // normalization\n    return this.normalize();\n  }\n  \n  get state() {\n    return this.get();\n  }\n    \n  get proto() {\n    return this.store.getProtoResource(this.state);\n  }\n  \n  get parent() {\n    const parentPath = this.state._parent;\n    if (parentPath) {\n      return this.store.follow(parentPath);\n    }\n    return undefined;\n  }\n  \n  get isAbstract() {\n    return this.state._abstract;\n  }\n  \n  get name() {\n    return this.state._name;\n  }\n  \n  normalize() {\n    let res = this.store;\n    for (const key of this.path.keys) {\n      res = res.follow(key);\n    }\n    return res;\n  }\n  \n  equals(other) {\n    if (other instanceof Resource) {\n      return equals(this.permanent.path, other.permanent.path);\n    } else {\n      // state equivalency\n      return equals(this.state, other);\n    }\n  }\n  \n  validate(state) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key)) {\n        const val = state[key];\n        const prop = this.follow(key);\n        const propState = (prop && prop.get()) || prop;\n        if (propState \n          && !equals(propState, val.__proto__) \n          && !equals(propState.__proto__, val.__proto__)) {\n          return new Value({\n            _proto: new Path(TypeError.name),\n          });\n        }\n      }\n    }\n    \n    const current = this.get();\n    for (var key in current) {\n      if (current.hasOwnProperty(key)) {\n        if (this.follow(key).isAbstract && state[key] === undefined) {\n          return new Value({\n            _proto: new Path(RequiredPropertyError.name),\n          });\n        }\n      }\n    }\n    \n    return null;\n  }\n    \n  follow(key) {\n    const state = this.get();\n    const val = state[key];\n    if (val instanceof Path) { // reference entity\n      return this.store.follow(val);\n    } else if (val === undefined && this.proto !== undefined) { // prototype chain\n      return this.proto.follow(key);\n    } else {\n      return this.store.follow(this.path.child(key));\n    }\n  }\n  \n  get() {\n    return this.store.getState(this.path);\n  }\n  \n  put(state) {\n    const parentPath = this.path.parent();\n    if (parentPath) {\n      this.store.follow(parentPath).patch({[this.path.last]: state});\n    } else {\n      this.store.setState(this.path.top, state);\n    }    \n  }\n\n  patch(diff) {\n    const current = this.get();\n    const state = Object.assign({}, current, diff);\n    this.put(state);\n  }\n  \n  // todo: postを追加する(resourceがprotoになる?)\n}\n\n\n// test suite\nconst store = new Store();\n\nconst p1 = store.post({\n  _name: \"Proto1\",\n  foo: 1,\n  bar: 2,\n  fiz: 9\n});\nconst r2id = Path.uuid();\nconst r1 = store.post({\n  _proto: p1.path,\n  foo: 3, \n  bar: 4,\n  baz: new Path(r2id)\n});\nconst r2 = store.setState(r2id, {\n  _proto: p1.path,\n  foo: 5,\n  bar: 6,\n  baz: r1.path\n});\nconst r3 = store.post({\n  _proto: p1.path,\n  foo: 5,\n  bar: 6,\n  baz: r1.path\n});\n\n// resource generation\nconsole.assert(r1.path instanceof Path);\nconsole.assert(r2.path instanceof Path);\n\n// resource property access\nconsole.assert(r1.follow(\"foo\").equals(3));\nconsole.assert(r1.follow(\"bar\").equals(4));\nconsole.assert(r2.follow(\"foo\").equals(5));\nconsole.assert(r2.follow(\"bar\").equals(6));\n\n// circular referencing\nconsole.assert(r2.follow(\"baz\").equals(r1));\nconsole.assert(r2.follow(\"baz\").follow(\"baz\").equals(r2));\nconsole.assert(r2.follow(\"baz\").follow(\"baz\").follow(\"baz\").equals(r1));\n\n// prototype definition\nconsole.assert(r2.follow(\"_proto\").equals(p1));\nconsole.assert(r2.proto.equals(p1));\nconsole.assert(r2.proto.name === \"Proto1\");\n\n// get method returns raw path\nconsole.assert(equals(store.getState(\"Proto1\"), p1.get()));\n// resource method resolves id reference\nconsole.assert(store.follow(\"Proto1\").equals(p1));\n\n// prototype chain\nconsole.assert(r2.follow(\"fiz\").equals(9));\n\n// equivalency\nconsole.assert(r2.equals(r2));\nconsole.assert(!r2.equals(r3));\nconsole.assert(r2.equals(r2.get())); // state equivalency\nconsole.assert(equals(r2.get(), r3.get()));\nconsole.assert(!equals(r2.get(),r1.get()));\n\n\n// entity schema for composition\nconst k2 = \"Proto2\";\nconst p2 = store.post({\n  _name: k2,\n  foo: new Entity({\n    bar: 3,\n    baz: 4,\n  }),\n});\nconst r4 = store.post({\n  _proto: new Path(k2),\n  foo: {\n    baz: 5,\n  },\n  fiz: 9,\n});\n\n// prototype chain by entity\nconsole.assert(r4.follow(\"foo\").follow(\"bar\").equals(3));\n// parent entity access\nconsole.assert(r4.follow(\"foo\").parent.equals(r4));\n// override child entity property\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(5));\n// get by path\nconsole.assert(store.follow(new Path(r4.path.top)).follow(\"foo\").follow(\"baz\").equals(5));\nconsole.assert(store.follow(new Path(r4.path.top, \"foo\")).follow(\"baz\").equals(5));\nconsole.assert(store.follow(new Path(r4.path.top, \"foo\", \"baz\")).equals(5));\n\n// update property\nconsole.assert(r4.follow(\"fiz\").equals(9));\nr4.patch({fiz: 8});\nconsole.assert(r4.follow(\"fiz\").equals(8));\n\n// update child property\nr4.follow(\"foo\").patch({baz: 6});\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(6));\n\n// update by state\nr4.patch({\n  fiz: 9,\n});\nconsole.assert(r4.follow(\"fiz\").equals(9));\n\n// update child by state\nr4.follow(\"foo\").patch({\n  baz: 7,\n});\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(7));\n\n// update parent and child by state\nconst oldFoo = r4.follow(\"foo\");\nr4.patch({\n  fiz: 7,\n  foo: {\n    baz: 8,\n  }\n});\nconsole.assert(r4.follow(\"fiz\").equals(7));\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(8));\nconsole.assert(!equals(r4.follow(\"foo\").path, oldFoo.path)); // updated\nconsole.assert(oldFoo.get()._parent === undefined);\nconsole.assert(oldFoo.parent === undefined);\n\n// update parent and child by state with child identifier\nconst fooPath = r4.follow(\"foo\").path;\nr4.patch({\n  fiz: 6, \n  foo: {\n    _uuid: fooPath.top,\n    baz: 9,\n  }\n});\nconsole.assert(r4.follow(\"fiz\").equals(6));\nconsole.assert(r4.follow(\"foo\").follow(\"baz\").equals(9));\nconsole.assert(equals(r4.follow(\"foo\").path, fooPath)); // not updated\n\n// update proto's key name\nconsole.assert(store.follow(\"Proto2\"));\nconsole.assert(!store.follow(\"Proto2dash\"));\nconst k2dash = new Path(\"Proto2dash\");\np2.patch({_name: k2dash.top});\nconsole.assert(!store.follow(\"Proto2\"));\nconsole.assert(r4.proto.name === \"Proto2dash\");\nconsole.assert(store.follow(\"Proto2dash\").equals(p2));\n\n\n// nested state resource\nconst r5 = store.post({\n  hoge: 3,\n  fuga: 4,\n});\nconst r6 = store.post({\n  foo: {\n    _proto: r5.path,\n    hoge: 5,\n  }\n});\nconsole.assert(r6.follow(\"foo\").follow(\"hoge\").equals(5));\nconsole.assert(r6.follow(\"foo\").proto.follow(\"hoge\").equals(3));\n\n\n// update deep nested state\nconst r7 = store.post({\n  foo: {\n    bar: {\n      baz: {\n        fiz: 5,\n      }\n    }\n  }\n});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(5));\nr7.follow(\"foo\").follow(\"bar\").follow(\"baz\").patch({fiz: 7});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(7));\nr7.follow(\"foo\").follow(\"bar\").follow(\"baz\").patch({fiz: 8});\nconsole.assert(r7.follow(\"foo\").follow(\"bar\").follow(\"baz\").follow(\"fiz\").equals(8));\n\n\n// recurcive definition\nconst list = store.post({\n  _name: \"List\",\n  car: new Path(\"Entity\"),\n  cdr: new Path(\"List\"),\n});\nconsole.assert(store.follow(\"List\").follow(\"cdr\").equals(store.follow(\"List\")));\n\n\n// algebraic data type\n// e.g. http://qiita.com/xmeta/items/91dfb24fa87c3a9f5993\nconst color = store.post({\n  _proto: new Path(Value.name),\n  _name: \"Color\",\n  Red: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  Blue: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  Green: new Entity({ \n    _proto: new Path(\"Color\"),\n  }),\n  RGB: new Entity({\n    _proto: new Path(\"Color\"),\n    r: new Path(\"Number\"),\n    g: new Path(\"Number\"),\n    b: new Path(\"Number\"),\n  }),\n});\n\n// namespace & proto\nconsole.assert(store.follow(\"Color\").equals(color));\nconsole.assert(store.follow(\"Color\").follow(\"Red\").proto.equals(color));\nconsole.assert(store.follow(\"Color\").follow(\"RGB\").proto.equals(color));\n\n// concrete resource\nconst c1 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  b: 7\n});\nconsole.assert(c1.proto.equals(color.follow(\"RGB\")));\n\n// premitive type error\nconst err1 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  b: \"invalid\",\n});\nconsole.assert(err1.proto.equals(store.follow(\"TypeError\")));\n\n// required property error\nconst err2 = store.post({\n  _proto: new Path(\"Color\", \"RGB\"),\n  r: 5,\n  g: 6,\n  // b: \"nothing\",\n});\nconsole.assert(err2.proto.equals(store.follow(\"RequiredPropertyError\")));\n\n\nconsole.log(\"all tests succeeded.\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BidirectionalMap = (function () {\n    function BidirectionalMap() {\n        var object = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n        _classCallCheck(this, BidirectionalMap);\n\n        this._map = new Map();\n        this._reverse = new Map();\n        if (object) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = Object.keys(object)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var attr = _step.value;\n\n                    this.set(attr, object[attr]);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n                        _iterator[\"return\"]();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }\n\n    _createClass(BidirectionalMap, [{\n        key: \"set\",\n        value: function set(key, value) {\n            if (this._map.has(key)) {\n                var _value = this._map.get(key);\n                this._reverse[\"delete\"](_value);\n            }\n            if (this._reverse.has(value)) {\n                var _key = this._reverse.get(value);\n                this._map[\"delete\"](_key);\n            }\n            this._map.set(key, value);\n            this._reverse.set(value, key);\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this._map.get(key);\n        }\n    }, {\n        key: \"getKey\",\n        value: function getKey(value) {\n            return this._reverse.get(value);\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._map.clear();\n            this._reverse.clear();\n        }\n    }, {\n        key: \"delete\",\n        value: function _delete(key) {\n            var value = this._map.get(key);\n            this._map[\"delete\"](key);\n            this._reverse[\"delete\"](value);\n        }\n    }, {\n        key: \"deleteValue\",\n        value: function deleteValue(value) {\n            var key = this._reverse.get(value);\n            this._map[\"delete\"](key);\n            this._reverse[\"delete\"](value);\n        }\n    }, {\n        key: \"entries\",\n        value: function entries() {\n            return this._map.entries();\n        }\n    }, {\n        key: \"has\",\n        value: function has(key) {\n            return this._map.has(key);\n        }\n    }, {\n        key: \"hasValue\",\n        value: function hasValue(value) {\n            return this._reverse.has(value);\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            return this._map.keys();\n        }\n    }, {\n        key: \"values\",\n        value: function values() {\n            return this._map.values();\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._map.size;\n        }\n    }]);\n\n    return BidirectionalMap;\n})();\n\nexports[\"default\"] = BidirectionalMap;\nmodule.exports = exports[\"default\"];\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bidirectional-map/dist/index.js\n// module id = 1\n// module chunks = 0","export default {\n  domain: {\n    Task: {\n      _proto: \"Entity\",\n      title: \"string\",\n      completed: \"bool\"\n    },\n    tasks: {\n      create: {\n        _proto: \"EventListener\",\n        title: { _proto: \"Argument\", type: \"string\" },\n        _stuff: {\n          _proto: [\n            \"self\",\n            \"append\"\n          ],\n          _stuff: {\n            _proto: \"Task\",\n            id: { _proto: \"UUID\" },\n            title: { _proto: \"title\" },\n            completed: false\n          }\n        }\n      },\n      all: {\n        // todo 本当はただのparent参照にしたいがうまくいかないので無駄にfilterかける\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"argument\", type: \"Task\" },\n          _stuff: true\n        }\n      },\n      active: {\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"Argument\", type: \"Task\" },\n          _stuff: {\n            _proto: \"not\",\n            _stuff: {\n              _proto: [\n                \"task\",\n                \"completed\",\n              ]\n            }\n          }\n        }\n      },\n      completed: {\n        _proto: [\n          \"parent\",\n          \"filter\"\n        ],\n        _stuff: {\n          _proto: \"Lambda\",\n          task: { _proto: \"Argument\", type: \"Task\" },\n          _stuff: {\n            _proto: [\n              \"task\",\n              \"completed\",\n            ]\n          }\n        }\n      },\n      _stuff: [\n      ]\n    }\n  },\n  presentation: {\n    location: {\n      hash: \"\",\n    },\n    // taskList: {\n    //   _proto: \"if\",\n    //   cond: {\n    //     _proto: [\n    //       \"location\",\n    //       \"hash\",\n    //       \"equals\"\n    //     ],\n    //     _stuff: \"#/active\"\n    //   },\n    //   then: {\n    //     _proto: [\n    //       \"domain\",\n    //       \"tasks\",\n    //       \"active\",\n    //       \"filter\"\n    //     ],\n    //     _stuff: {\n    //       _proto: \"Lambda\",\n    //       task: { _proto: \"argument\", type: \"Task\" },\n    //       _stuff: true\n    //     }\n    //   },\n    //   else: {\n    //     _proto: \"if\",\n    //     cond: {\n    //       _proto: [\n    //         \"location\",\n    //         \"hash\",\n    //         \"equals\"\n    //       ],\n    //       _stuff: \"#/completed\"\n    //     },\n    //     then: {\n    //       _proto: [\n    //         \"domain\",\n    //         \"tasks\",\n    //         \"completed\",\n    //         \"filter\"\n    //       ],\n    //       _stuff: {\n    //         _proto: \"Lambda\",\n    //         task: { _proto: \"argument\", type: \"Task\" },\n    //         _stuff: true\n    //       }\n    //     },\n    //     else: {\n    //       _proto: [\n    //         \"domain\",\n    //         \"tasks\",\n    //         \"all\",\n    //         \"filter\"\n    //       ],\n    //       _stuff: {\n    //         _proto: \"Lambda\",\n    //         task: { _proto: \"argument\", type: \"Task\" },\n    //         _stuff: true\n    //       }\n    //     }\n    //   }\n    // },\n    body: {\n      _proto: \"Body\",\n      _stuff: [\n        {\n          _proto: \"Section\",\n          class: \"todoapp\",\n          _stuff: [\n            {\n              _proto: \"Div\",\n              _stuff: [\n                {\n                  _proto: \"Header\",\n                  class: \"header\",\n                  _stuff: [\n                    {\n                      _proto: \"H1\",\n                      _stuff: [\n                        \"todos\"\n                      ]\n                    },\n                    {\n                      _proto: \"Input\",\n                      class: \"new-todo\",\n                      placeholder: \"What needs to be done?\",\n                      autofocus: true,\n                      clear: {\n                        _proto: \"EventListener\",\n                        _stuff: {\n                          _proto: [\n                            \"self\",\n                            \"set\"\n                          ],\n                          value: \"\",\n                        }\n                      },\n                      keyup: {\n                        _proto: \"EventListener\",\n                        keyCode: { _proto: \"Argument\", type: \"Literal\" },\n                        _stuff: {\n                          _proto: \"if\",\n                          cond: {\n                            _proto: [\n                              \"keyCode\",\n                              \"equals\"\n                            ],\n                            _stuff: 13\n                          },\n                          then: {\n                            _proto: \"Stuff\",\n                            _stuff: [\n                              {\n                                _proto: [\n                                  \"domain\",\n                                  \"tasks\",\n                                  \"create\"\n                                ],\n                                title: {\n                                  _proto: \"value\"\n                                }\n                              },\n                              {\n                                _proto: \"clear\"\n                              }\n                            ]\n                          },\n                          else: undefined\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  _proto: \"Section\",\n                  class: \"main\",\n                  _stuff: [\n                    {\n                      _proto: \"Input\",\n                      class: \"toggle-all\",\n                      type: \"checkbox\"\n                    },\n                    {\n                      _proto: \"Ul\",\n                      class: \"todo-list\",\n                      _stuff: { \n                        _proto: [\n                          \"domain\",\n                          \"tasks\",\n                          \"map\"\n                        ],\n                        _stuff: [\n                          {\n                            _proto: \"Lambda\",\n                            task: { _proto: \"Argument\", type: \"Task\" },\n                            _stuff: [\n                              {\n                                _proto: \"Li\",\n                                key: {\n                                  _proto: [\n                                    \"task\",\n                                    \"id\"\n                                  ]\n                                },\n                                _stuff: [\n                                  {\n                                    _proto: \"Div\",\n                                    class: \"view\",\n                                    _stuff: [\n                                      {\n                                        _proto: \"Input\",\n                                        class: \"toggle\",\n                                        type: \"checkbox\",\n                                      },\n                                      {\n                                        _proto: \"Label\",\n                                        _stuff: {\n                                          _proto: [\n                                            \"task\",\n                                            \"title\"\n                                          ],\n                                        }\n                                      },\n                                      {\n                                        _proto: \"Button\",\n                                        class: \"destroy\",\n                                      }\n                                    ]\n                                  },\n                                  {\n                                    _proto: \"Input\",\n                                    class: \"edit\",\n                                    value: {\n                                      _proto: [\n                                        \"task\",\n                                        \"title\"\n                                      ],\n                                    }\n                                  }\n                                ]\n                              }\n                            ]\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                },\n                {\n                  _proto: \"Footer\",\n                  class: \"footer\",\n                  _stuff: [\n                    {\n                      _proto: \"Span\",\n                      class: \"todo-count\",\n                      _stuff: [\n                        {\n                          _proto: \"Strong\",\n                          _stuff: {\n                            _proto: [\n                              \"domain\",\n                              \"tasks\",\n                              \"count\"\n                            ]\n                          }\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: \" \"\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: {\n                            _proto: \"if\",\n                            cond: {\n                              _proto: [\n                                \"domain\", \n                                \"tasks\", \n                                \"count\", \n                                \"equals\"\n                              ],\n                              _stuff: 1\n                            },\n                            then: \"item\",\n                            else: \"items\"\n                          }\n                        },\n                        {\n                          _proto: \"Span\",\n                          _stuff: \" left\"\n                        }\n                      ]\n                    },\n                    {\n                      _proto: \"Ul\",\n                      class: \"filters\",\n                      _stuff: [\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/\",\n                              class: \"selected\",\n                              _stuff: \"All\"\n                            }\n                          ]\n                        },\n                        {\n                          _proto: \"Span\",\n                        },\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/active\",\n                              _stuff: \"Active\"\n                            }\n                          ]\n                        },\n                        {\n                          _proto: \"Span\",\n                        },\n                        {\n                          _proto: \"Li\",\n                          _stuff: [\n                            {\n                              _proto: \"A\",\n                              href: \"#/completed\",\n                              _stuff: \"Completed\"\n                            }\n                          ]\n                        },\n                      ]\n                    },\n                    {\n                      _proto: \"Button\",\n                      class: \"clear-completed\",\n                      _stuff: \"Clear Completed\"\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          _proto: \"Footer\",\n          class: \"info\",\n          _stuff: [\n            {\n              _proto: \"P\",\n              _stuff: \"Double-click to edit a todo\"\n            },\n            {\n              _proto: \"P\",\n              _stuff: [\n                \"Created by \",\n                {\n                  _proto: \"A\",\n                  href: \"http://github.com/emeitch/\",\n                  _stuff: \"Hideyuki MORITA (emeitch)\"\n                }\n              ]\n            },\n            {\n              _proto: \"P\",\n              _stuff: [\n                \"Part of \",\n                {\n                  _proto: \"A\",\n                  href: \"http://todomvc.com\",\n                  _stuff: \"TodoMVC\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/todomvc.js\n// module id = 2\n// module chunks = 0","export default class State {\n  constructor(init={}) {\n    Object.assign(this, init);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state.js\n// module id = 3\n// module chunks = 0","import State from \"./state\";\n\nexport default class Error extends State {\n}\n\nclass TypeError extends Error {\n}\n\nclass RequiredPropertyError extends Error {\n}\n\nexport { TypeError, RequiredPropertyError }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/error.js\n// module id = 4\n// module chunks = 0","function flatten(array) {\n  return Array.prototype.concat.apply([], array);\n}\n\nfunction equals(o1, o2) {\n  return JSON.stringify(o1) === JSON.stringify(o2);\n}\n\nexport { flatten, equals };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.js\n// module id = 5\n// module chunks = 0","import State from './state'\n\nexport default class Entity extends State {\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/entity.js\n// module id = 6\n// module chunks = 0","import State from './state'\n\nexport default class Value extends State {\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/value.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}